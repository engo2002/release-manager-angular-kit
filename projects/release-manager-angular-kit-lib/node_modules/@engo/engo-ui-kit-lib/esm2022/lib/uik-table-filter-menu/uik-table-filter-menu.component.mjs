import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/slide-toggle";
import * as i3 from "@angular/material/badge";
import * as i4 from "@angular/material/menu";
export class UikTableFilterMenuComponent {
    constructor() {
        this.label = "Filter";
        this.filters = [];
        this.filterStatusEmitter = new EventEmitter();
    }
    get filterActiveCount() {
        return this.filters.filter((f) => f.active === true).length;
    }
    toggleFilter($event, index) {
        this.filters[index].active = $event.checked;
        this.filterStatusEmitter.emit(this.filters[index]);
    }
    getCount(index) {
        return this.filters[index].count;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikTableFilterMenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UikTableFilterMenuComponent, selector: "engo-uik-table-filter-menu", inputs: { label: "label", filters: "filters" }, outputs: { filterStatusEmitter: "filterStatusEmitter" }, ngImport: i0, template: "<button #filtertrigger=\"matMenuTrigger\" [class.menu-opened]=\"filtertrigger.menuOpen\"\n        [matBadge]=\"filterActiveCount !== 0 ? filterActiveCount : undefined\" [matMenuTriggerFor]=\"feedFilter\"\n        class=\"btn btn-white-border-gray filter-button\">\n  <i class=\"fa-solid fa-filter filter-icon\"></i><span\n  style=\"text-overflow: ellipsis; overflow: hidden;\">{{label}}</span>\n</button>\n<mat-menu #feedFilter>\n  <div (click)=\"$event.stopPropagation()\" *ngFor=\"let filter of filters; index as index\" class=\"filter-container\">\n    <mat-slide-toggle (change)=\"toggleFilter($event, index)\" [checked]=\"filter.active\">\n      <span>{{filter.description}} {{getCount(index) && getCount(index) > 0 ? '(' + getCount(index) + ')' : ''}}</span>\n    </mat-slide-toggle>\n  </div>\n</mat-menu>\n", styles: [".filter-button{padding:8px 20px;margin:8px 12px 12px 8px}.filter-icon{margin-right:4px;vertical-align:middle}.filter-container{display:flex;flex-direction:column;padding:8px 12px}.menu-opened{background-color:var(--engo-dark-blue);color:var(--engo-white);border-color:var(--engo-white)}/deep/ .mat-mdc-menu-panel{max-width:500px!important}/deep/ .mat-mdc-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:var(--engo-light-blue)!important}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i2.MatSlideToggle, selector: "mat-slide-toggle", inputs: ["disabled", "disableRipple", "color", "tabIndex"], exportAs: ["matSlideToggle"] }, { kind: "directive", type: i3.MatBadge, selector: "[matBadge]", inputs: ["matBadgeDisabled", "matBadgeColor", "matBadgeOverlap", "matBadgePosition", "matBadge", "matBadgeDescription", "matBadgeSize", "matBadgeHidden"] }, { kind: "component", type: i4.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "directive", type: i4.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikTableFilterMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'engo-uik-table-filter-menu', template: "<button #filtertrigger=\"matMenuTrigger\" [class.menu-opened]=\"filtertrigger.menuOpen\"\n        [matBadge]=\"filterActiveCount !== 0 ? filterActiveCount : undefined\" [matMenuTriggerFor]=\"feedFilter\"\n        class=\"btn btn-white-border-gray filter-button\">\n  <i class=\"fa-solid fa-filter filter-icon\"></i><span\n  style=\"text-overflow: ellipsis; overflow: hidden;\">{{label}}</span>\n</button>\n<mat-menu #feedFilter>\n  <div (click)=\"$event.stopPropagation()\" *ngFor=\"let filter of filters; index as index\" class=\"filter-container\">\n    <mat-slide-toggle (change)=\"toggleFilter($event, index)\" [checked]=\"filter.active\">\n      <span>{{filter.description}} {{getCount(index) && getCount(index) > 0 ? '(' + getCount(index) + ')' : ''}}</span>\n    </mat-slide-toggle>\n  </div>\n</mat-menu>\n", styles: [".filter-button{padding:8px 20px;margin:8px 12px 12px 8px}.filter-icon{margin-right:4px;vertical-align:middle}.filter-container{display:flex;flex-direction:column;padding:8px 12px}.menu-opened{background-color:var(--engo-dark-blue);color:var(--engo-white);border-color:var(--engo-white)}/deep/ .mat-mdc-menu-panel{max-width:500px!important}/deep/ .mat-mdc-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:var(--engo-light-blue)!important}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { label: [{
                type: Input
            }], filters: [{
                type: Input
            }], filterStatusEmitter: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWlrLXRhYmxlLWZpbHRlci1tZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2VuZ28tdWkta2l0LWxpYi9zcmMvbGliL3Vpay10YWJsZS1maWx0ZXItbWVudS91aWstdGFibGUtZmlsdGVyLW1lbnUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZW5nby11aS1raXQtbGliL3NyYy9saWIvdWlrLXRhYmxlLWZpbHRlci1tZW51L3Vpay10YWJsZS1maWx0ZXItbWVudS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFTdkUsTUFBTSxPQUFPLDJCQUEyQjtJQUt0QztRQUpTLFVBQUssR0FBRyxRQUFRLENBQUM7UUFDakIsWUFBTyxHQUEyQixFQUFFLENBQUM7UUFDcEMsd0JBQW1CLEdBQUcsSUFBSSxZQUFZLEVBQXdCLENBQUM7SUFHekUsQ0FBQztJQUVELElBQUksaUJBQWlCO1FBQ25CLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQzlELENBQUM7SUFFRCxZQUFZLENBQUMsTUFBNEIsRUFBRSxLQUFhO1FBQ3RELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDNUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFhO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFNLENBQUM7SUFDcEMsQ0FBQzsrR0FuQlUsMkJBQTJCO21HQUEzQiwyQkFBMkIsMktDVHhDLGd6QkFhQTs7NEZESmEsMkJBQTJCO2tCQUx2QyxTQUFTOytCQUNFLDRCQUE0QjswRUFLN0IsS0FBSztzQkFBYixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDSSxtQkFBbUI7c0JBQTVCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSVRhYmxlRmlsdGVyTWVudUl0ZW0gfSBmcm9tIFwiLi9pbnRlcmZhY2VzL1RhYmxlRmlsdGVyTWVudUl0ZW0uaW50ZXJmYWNlXCI7XG5pbXBvcnQgeyBNYXRTbGlkZVRvZ2dsZUNoYW5nZSB9IGZyb20gXCJAYW5ndWxhci9tYXRlcmlhbC9zbGlkZS10b2dnbGVcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZW5nby11aWstdGFibGUtZmlsdGVyLW1lbnUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdWlrLXRhYmxlLWZpbHRlci1tZW51LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdWlrLXRhYmxlLWZpbHRlci1tZW51LmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBVaWtUYWJsZUZpbHRlck1lbnVDb21wb25lbnQge1xuICBASW5wdXQoKSBsYWJlbCA9IFwiRmlsdGVyXCI7XG4gIEBJbnB1dCgpIGZpbHRlcnM6IElUYWJsZUZpbHRlck1lbnVJdGVtW10gPSBbXTtcbiAgQE91dHB1dCgpIGZpbHRlclN0YXR1c0VtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPElUYWJsZUZpbHRlck1lbnVJdGVtPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG5cbiAgZ2V0IGZpbHRlckFjdGl2ZUNvdW50KCkge1xuICAgIHJldHVybiB0aGlzLmZpbHRlcnMuZmlsdGVyKChmKSA9PiBmLmFjdGl2ZSA9PT0gdHJ1ZSkubGVuZ3RoO1xuICB9XG5cbiAgdG9nZ2xlRmlsdGVyKCRldmVudDogTWF0U2xpZGVUb2dnbGVDaGFuZ2UsIGluZGV4OiBudW1iZXIpIHtcbiAgICB0aGlzLmZpbHRlcnNbaW5kZXhdLmFjdGl2ZSA9ICRldmVudC5jaGVja2VkO1xuICAgIHRoaXMuZmlsdGVyU3RhdHVzRW1pdHRlci5lbWl0KHRoaXMuZmlsdGVyc1tpbmRleF0pO1xuICB9XG5cbiAgZ2V0Q291bnQoaW5kZXg6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLmZpbHRlcnNbaW5kZXhdLmNvdW50ITtcbiAgfVxufVxuIiwiPGJ1dHRvbiAjZmlsdGVydHJpZ2dlcj1cIm1hdE1lbnVUcmlnZ2VyXCIgW2NsYXNzLm1lbnUtb3BlbmVkXT1cImZpbHRlcnRyaWdnZXIubWVudU9wZW5cIlxuICAgICAgICBbbWF0QmFkZ2VdPVwiZmlsdGVyQWN0aXZlQ291bnQgIT09IDAgPyBmaWx0ZXJBY3RpdmVDb3VudCA6IHVuZGVmaW5lZFwiIFttYXRNZW51VHJpZ2dlckZvcl09XCJmZWVkRmlsdGVyXCJcbiAgICAgICAgY2xhc3M9XCJidG4gYnRuLXdoaXRlLWJvcmRlci1ncmF5IGZpbHRlci1idXR0b25cIj5cbiAgPGkgY2xhc3M9XCJmYS1zb2xpZCBmYS1maWx0ZXIgZmlsdGVyLWljb25cIj48L2k+PHNwYW5cbiAgc3R5bGU9XCJ0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgb3ZlcmZsb3c6IGhpZGRlbjtcIj57e2xhYmVsfX08L3NwYW4+XG48L2J1dHRvbj5cbjxtYXQtbWVudSAjZmVlZEZpbHRlcj5cbiAgPGRpdiAoY2xpY2spPVwiJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpXCIgKm5nRm9yPVwibGV0IGZpbHRlciBvZiBmaWx0ZXJzOyBpbmRleCBhcyBpbmRleFwiIGNsYXNzPVwiZmlsdGVyLWNvbnRhaW5lclwiPlxuICAgIDxtYXQtc2xpZGUtdG9nZ2xlIChjaGFuZ2UpPVwidG9nZ2xlRmlsdGVyKCRldmVudCwgaW5kZXgpXCIgW2NoZWNrZWRdPVwiZmlsdGVyLmFjdGl2ZVwiPlxuICAgICAgPHNwYW4+e3tmaWx0ZXIuZGVzY3JpcHRpb259fSB7e2dldENvdW50KGluZGV4KSAmJiBnZXRDb3VudChpbmRleCkgPiAwID8gJygnICsgZ2V0Q291bnQoaW5kZXgpICsgJyknIDogJyd9fTwvc3Bhbj5cbiAgICA8L21hdC1zbGlkZS10b2dnbGU+XG4gIDwvZGl2PlxuPC9tYXQtbWVudT5cbiJdfQ==