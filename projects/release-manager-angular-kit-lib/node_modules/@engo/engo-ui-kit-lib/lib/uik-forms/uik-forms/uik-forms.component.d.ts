import { AfterViewInit, EventEmitter, OnInit } from '@angular/core';
import { IFormFieldInput, IFormFields } from '../interfaces/uik-forms.interface';
import { NgForm } from '@angular/forms';
import { MatSelectChange } from '@angular/material/select';
import * as i0 from "@angular/core";
export interface IValidationResult {
    value: string;
    valid: boolean;
    errorMessage: string[];
}
export declare class UikFormsComponent implements OnInit, AfterViewInit {
    formStructure: IFormFields[];
    submitData: EventEmitter<any>;
    inputLiveData: EventEmitter<any>;
    selectValue: EventEmitter<any>;
    selectSearchValue: EventEmitter<any>;
    validationResult: EventEmitter<IValidationResult[]>;
    changes: number;
    checkboxValue: boolean;
    inputNgModel: any[];
    validationResults: IValidationResult[];
    selectSearchNgModelObject: Array<string> | Array<null>;
    private previousFormData;
    constructor();
    ngOnInit(): void;
    ngAfterViewInit(): void;
    onSubmit(form: NgForm): void;
    onChange(form: NgForm): void;
    getSelectedValue(select: MatSelectChange): void;
    getSelectSearchValue(index: number): void;
    checkboxChangeEmit(event: any): void;
    checkValidation(): IValidationResult[];
    hasChanged(formfield: IFormFieldInput, current: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UikFormsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UikFormsComponent, "engo-uik-forms", never, { "formStructure": { "alias": "formStructure"; "required": false; }; }, { "submitData": "submitData"; "inputLiveData": "inputLiveData"; "selectValue": "selectValue"; "selectSearchValue": "selectSearchValue"; "validationResult": "validationResult"; }, never, never, false, never>;
}
