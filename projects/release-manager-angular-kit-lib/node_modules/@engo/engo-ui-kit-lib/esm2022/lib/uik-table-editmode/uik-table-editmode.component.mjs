import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { MatTable, MatTableDataSource } from '@angular/material/table';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/table";
import * as i3 from "@angular/material/sort";
import * as i4 from "@angular/material/paginator";
import * as i5 from "../uik-status-label/uik-status-label.component";
export class UikTableEditmodeComponent {
    constructor() {
        this.columns = undefined;
        this.showStatusLabel = false;
        this.dataSource = new MatTableDataSource();
        this.enablePagination = false;
        this.enableSort = false;
        this.idColumnName = '';
        this.enableFiltering = false;
        this.saveEntryData = new EventEmitter();
        this.deleteEntryRowid = new EventEmitter();
        this.editRowId = new EventEmitter();
        this.callAction = new EventEmitter();
        this.displayedColumns = [];
        this.editMode = false;
        this.editModeIndex = null;
        this.pageIndex = 0;
        this.pageSize = 0;
        this.correctIndex = 0;
        this.change = 0;
    }
    ngOnInit() {
    }
    ngAfterViewInit() {
        this.renderDisplayedColumns();
        this.table.renderRows();
        this.renderSorting();
        this.renderPagination();
        this.renderStatusLabel();
    }
    ngOnChanges(changes) {
        if (this.table) {
            if (changes["dataSource"]) {
                this.table.dataSource = this.dataSource;
            }
            this.table.renderRows();
            this.renderSorting();
            this.renderPagination();
            this.renderStatusLabel();
        }
    }
    async enableEditMode(index) {
        if (this.hasPermissionWrite) {
            this.editMode = true;
            if (this.paginator && this.enablePagination) {
                this.pageIndex = this.paginator.pageIndex;
                this.pageSize = this.paginator.pageSize;
                this.correctIndex = this.pageIndex * this.pageSize;
                index = index + this.correctIndex;
            }
            const elementId = this.dataSource.filteredData[+index].id;
            if (this.enableFiltering && !!this.dataSource.filter) {
                const indexOfFiltered = this.dataSource.data.findIndex((e) => e.id === elementId);
                if (indexOfFiltered) {
                    index = indexOfFiltered;
                }
            }
            this.editModeIndex = index;
            this.newData = this.dataSource.filteredData[index];
        }
    }
    changeInputValue(backendName, index, backendPath) {
        if (backendPath) {
            this.newData[backendPath][backendName] = (document.getElementById(backendName + index)).value;
            this.change++;
        }
        else {
            this.newData[backendName] = (document.getElementById(backendName + index)).value;
            this.change++;
        }
    }
    emitSaveEntry() {
        if (this.hasPermissionWrite) {
            this.saveEntryData.emit(this.newData);
            this.editRowId.emit(this.editModeIndex);
            this.callAction.emit('save');
            this.editMode = false;
            this.change = 0;
        }
    }
    deleteEntry(index) {
        this.deleteEntryRowid.emit(this.getRowid(index));
        this.callAction.emit('delete');
        this.editMode = false;
        this.change = 0;
    }
    cancel() {
        this.editMode = false;
        window.location.reload();
    }
    onChangePagination(event) {
        this.editMode = false;
    }
    applyFilter(event) {
        const filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
        this.editMode = false;
        this.editModeIndex = null;
    }
    getRowid(index) {
        let newDataRowId = !!this.dataSource.data[index].rowid ? this.dataSource.data[index].rowid : this.dataSource.data[index].id;
        const backendPathId = this.columns?.find((column) => column.name === this.idColumnName && column.backendPath);
        if (backendPathId && backendPathId.backendPath) {
            // @ts-ignore
            // tslint:disable-next-line:max-line-length
            newDataRowId = this.dataSource.data[index][backendPathId.backendPath][backendPathId.backendName] || this.dataSource.data[index][backendPathId.backendPath].id || this.dataSource.data[index][backendPathId.backendPath].rowid;
        }
        return newDataRowId;
    }
    renderDisplayedColumns() {
        if (this.columns) {
            for (const column of this.columns) {
                this.displayedColumns.push(column.name);
            }
            this.displayedColumns.push('edit', 'save', 'delete', 'cancel');
        }
    }
    renderStatusLabel() {
        if (this.showStatusLabel) {
            if (!this.displayedColumns.includes('statusLabelColumn')) {
                this.displayedColumns.push('statusLabelColumn');
            }
            this.dataSource.data.forEach(element => element.statusLabelColumn = element.statusLabel.labelValue);
        }
    }
    renderSorting() {
        if (this.enableSort) {
            this.dataSource.sort = this.sort;
        }
    }
    renderPagination() {
        if (this.enablePagination) {
            this.dataSource.paginator = this.paginator;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikTableEditmodeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UikTableEditmodeComponent, selector: "engo-uik-table-editmode", inputs: { columns: "columns", statusHeaderLabel: "statusHeaderLabel", showStatusLabel: "showStatusLabel", dataSource: "dataSource", enablePagination: "enablePagination", enableSort: "enableSort", hasPermissionWrite: "hasPermissionWrite", idColumnName: "idColumnName", enableFiltering: "enableFiltering" }, outputs: { saveEntryData: "saveEntryData", deleteEntryRowid: "deleteEntryRowid", editRowId: "editRowId", callAction: "callAction" }, viewQueries: [{ propertyName: "paginator", first: true, predicate: MatPaginator, descendants: true }, { propertyName: "sort", first: true, predicate: MatSort, descendants: true }, { propertyName: "table", first: true, predicate: MatTable, descendants: true }], usesOnChanges: true, ngImport: i0, template: "<div *ngIf=\"enableFiltering\" class=\"form\">\n  <label class=\"inp\" for=\"inp\">\n    <input (keyup)=\"applyFilter($event)\" id=\"inp\" placeholder=\" \" type=\"text\">\n    <span class=\"label\">Suchen & Filtern</span>\n    <span class=\"focus-bg\"></span>\n  </label>\n</div>\n<div class=\"table-container\">\n  <table #table [dataSource]=\"dataSource\" class=\"inventar-table mat-elevation-z8\" mat-table matSort>\n    <div *ngIf=\"enableSort\">\n      <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{column.displayName}} </th>\n        <td *matCellDef=\"let element; index as i\" class=\"table-column\" mat-cell>\n          <input (keyup)=\"changeInputValue(column.backendName, i, column.backendPath)\"\n                 *ngIf=\"!!column.backendPath && column.editable\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendPath.toString()][column.backendName]\"\n                 name={{column.name}}>\n          <input (keyup)=\"changeInputValue(column.backendName, i)\"\n                 *ngIf=\"column.backendPath === undefined && column.editable\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendName]\"\n                 name={{column.name}}>\n          <span\n            *ngIf=\"!column.editable && !!column.backendPath\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n          <span *ngIf=\"!column.editable && column.backendPath === undefined\">{{element[column.backendName]}}</span>\n        </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>{{statusHeaderLabel}}</th>\n        <td *matCellDef=\"let element; index as i\" mat-cell>\n          <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n        </td>\n      </ng-container>\n    </div>\n\n    <div *ngIf=\"!enableSort\">\n      <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n        <th *matHeaderCellDef mat-header-cell> {{column.displayName}} </th>\n        <td *matCellDef=\"let element; index as i\" class=\"table-column\" mat-cell>\n          <input (keyup)=\"changeInputValue(column.backendName, i, column.backendPath)\"\n                 *ngIf=\"!!column.backendPath\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendPath.toString()][column.backendName]\"\n                 name={{column.name}}>\n          <input (keyup)=\"changeInputValue(column.backendName, i)\" *ngIf=\"column.backendPath === undefined\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendName]\"\n                 name={{column.name}}>\n          <span\n            *ngIf=\"!column.editable && !!column.backendPath\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n          <span *ngIf=\"!column.editable && column.backendPath === undefined\">{{element[column.backendName]}}</span>\n        </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n        <th *matHeaderCellDef mat-header-cell>{{statusHeaderLabel}}</th>\n        <td *matCellDef=\"let element; index as i\" mat-cell>\n          <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n        </td>\n      </ng-container>\n    </div>\n\n    <ng-container matColumnDef=\"edit\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-pen\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell><a (click)=\"enableEditMode(i)\"\n                                                            *ngIf=\"!editMode\"\n                                                            class=\"btn-icon-button table-row-action edit-action\">\n        <i class=\"fa fa-pen\"></i>\n      </a></td>\n    </ng-container>\n    <ng-container matColumnDef=\"cancel\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-window-close\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button\n          (click)=\"cancel()\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n          class=\"btn-icon-button btn-cancel\"><i class=\"fa fa-window-close\"></i></button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"save\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-save\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button (click)=\"emitSaveEntry()\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n                [disabled]=\"change === 0\"\n                class=\"btn-icon-button\" id=\"saveBtn\" type=\"submit\"><i\n          [ngClass]=\"change === 0 ? 'inventory-button-disabled' : ''\" class=\"fa fa-save\"></i></button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"delete\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-trash\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button\n          (click)=\"deleteEntry(i)\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n          class=\"btn-icon-button btn-cancel\"><i class=\"fa fa-trash\"></i></button>\n      </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n    <tr *matRowDef=\"let element; columns: displayedColumns;\" mat-row></tr>\n  </table>\n  <mat-paginator (page)=\"onChangePagination($event)\" *ngIf=\"enablePagination\" [pageSizeOptions]=\"[10, 25, 50, 100, 200]\"\n                 showFirstLastButtons></mat-paginator>\n</div>\n", styles: ["table.mat-mdc-table{display:table;width:100%}table{position:sticky}.table-container{overflow-x:scroll}.table-column{width:-webkit-fill-available;width:fill-available}input:disabled{background-color:transparent;border:none}.btn-cancel i{color:#4b4b4b}.btn-cancel i:hover{color:#01592d}.inventory-button-disabled{color:#7c7c7c69}.header-icons{margin-left:6px}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i2.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i2.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i2.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i2.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i2.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i2.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i2.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "component", type: i2.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i2.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "directive", type: i3.MatSort, selector: "[matSort]", inputs: ["matSortDisabled", "matSortActive", "matSortStart", "matSortDirection", "matSortDisableClear"], outputs: ["matSortChange"], exportAs: ["matSort"] }, { kind: "component", type: i3.MatSortHeader, selector: "[mat-sort-header]", inputs: ["disabled", "mat-sort-header", "arrowPosition", "start", "sortActionDescription", "disableClear"], exportAs: ["matSortHeader"] }, { kind: "component", type: i4.MatPaginator, selector: "mat-paginator", inputs: ["disabled"], exportAs: ["matPaginator"] }, { kind: "component", type: i5.UikStatusLabelComponent, selector: "engo-uik-status-label", inputs: ["labelData"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikTableEditmodeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'engo-uik-table-editmode', template: "<div *ngIf=\"enableFiltering\" class=\"form\">\n  <label class=\"inp\" for=\"inp\">\n    <input (keyup)=\"applyFilter($event)\" id=\"inp\" placeholder=\" \" type=\"text\">\n    <span class=\"label\">Suchen & Filtern</span>\n    <span class=\"focus-bg\"></span>\n  </label>\n</div>\n<div class=\"table-container\">\n  <table #table [dataSource]=\"dataSource\" class=\"inventar-table mat-elevation-z8\" mat-table matSort>\n    <div *ngIf=\"enableSort\">\n      <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{column.displayName}} </th>\n        <td *matCellDef=\"let element; index as i\" class=\"table-column\" mat-cell>\n          <input (keyup)=\"changeInputValue(column.backendName, i, column.backendPath)\"\n                 *ngIf=\"!!column.backendPath && column.editable\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendPath.toString()][column.backendName]\"\n                 name={{column.name}}>\n          <input (keyup)=\"changeInputValue(column.backendName, i)\"\n                 *ngIf=\"column.backendPath === undefined && column.editable\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendName]\"\n                 name={{column.name}}>\n          <span\n            *ngIf=\"!column.editable && !!column.backendPath\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n          <span *ngIf=\"!column.editable && column.backendPath === undefined\">{{element[column.backendName]}}</span>\n        </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>{{statusHeaderLabel}}</th>\n        <td *matCellDef=\"let element; index as i\" mat-cell>\n          <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n        </td>\n      </ng-container>\n    </div>\n\n    <div *ngIf=\"!enableSort\">\n      <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n        <th *matHeaderCellDef mat-header-cell> {{column.displayName}} </th>\n        <td *matCellDef=\"let element; index as i\" class=\"table-column\" mat-cell>\n          <input (keyup)=\"changeInputValue(column.backendName, i, column.backendPath)\"\n                 *ngIf=\"!!column.backendPath\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendPath.toString()][column.backendName]\"\n                 name={{column.name}}>\n          <input (keyup)=\"changeInputValue(column.backendName, i)\" *ngIf=\"column.backendPath === undefined\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendName]\"\n                 name={{column.name}}>\n          <span\n            *ngIf=\"!column.editable && !!column.backendPath\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n          <span *ngIf=\"!column.editable && column.backendPath === undefined\">{{element[column.backendName]}}</span>\n        </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n        <th *matHeaderCellDef mat-header-cell>{{statusHeaderLabel}}</th>\n        <td *matCellDef=\"let element; index as i\" mat-cell>\n          <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n        </td>\n      </ng-container>\n    </div>\n\n    <ng-container matColumnDef=\"edit\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-pen\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell><a (click)=\"enableEditMode(i)\"\n                                                            *ngIf=\"!editMode\"\n                                                            class=\"btn-icon-button table-row-action edit-action\">\n        <i class=\"fa fa-pen\"></i>\n      </a></td>\n    </ng-container>\n    <ng-container matColumnDef=\"cancel\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-window-close\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button\n          (click)=\"cancel()\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n          class=\"btn-icon-button btn-cancel\"><i class=\"fa fa-window-close\"></i></button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"save\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-save\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button (click)=\"emitSaveEntry()\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n                [disabled]=\"change === 0\"\n                class=\"btn-icon-button\" id=\"saveBtn\" type=\"submit\"><i\n          [ngClass]=\"change === 0 ? 'inventory-button-disabled' : ''\" class=\"fa fa-save\"></i></button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"delete\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-trash\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button\n          (click)=\"deleteEntry(i)\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n          class=\"btn-icon-button btn-cancel\"><i class=\"fa fa-trash\"></i></button>\n      </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n    <tr *matRowDef=\"let element; columns: displayedColumns;\" mat-row></tr>\n  </table>\n  <mat-paginator (page)=\"onChangePagination($event)\" *ngIf=\"enablePagination\" [pageSizeOptions]=\"[10, 25, 50, 100, 200]\"\n                 showFirstLastButtons></mat-paginator>\n</div>\n", styles: ["table.mat-mdc-table{display:table;width:100%}table{position:sticky}.table-container{overflow-x:scroll}.table-column{width:-webkit-fill-available;width:fill-available}input:disabled{background-color:transparent;border:none}.btn-cancel i{color:#4b4b4b}.btn-cancel i:hover{color:#01592d}.inventory-button-disabled{color:#7c7c7c69}.header-icons{margin-left:6px}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { columns: [{
                type: Input
            }], statusHeaderLabel: [{
                type: Input
            }], showStatusLabel: [{
                type: Input
            }], dataSource: [{
                type: Input
            }], enablePagination: [{
                type: Input
            }], enableSort: [{
                type: Input
            }], hasPermissionWrite: [{
                type: Input
            }], idColumnName: [{
                type: Input
            }], enableFiltering: [{
                type: Input
            }], saveEntryData: [{
                type: Output
            }], deleteEntryRowid: [{
                type: Output
            }], editRowId: [{
                type: Output
            }], callAction: [{
                type: Output
            }], paginator: [{
                type: ViewChild,
                args: [MatPaginator]
            }], sort: [{
                type: ViewChild,
                args: [MatSort]
            }], table: [{
                type: ViewChild,
                args: [MatTable]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWlrLXRhYmxlLWVkaXRtb2RlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2VuZ28tdWkta2l0LWxpYi9zcmMvbGliL3Vpay10YWJsZS1lZGl0bW9kZS91aWstdGFibGUtZWRpdG1vZGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZW5nby11aS1raXQtbGliL3NyYy9saWIvdWlrLXRhYmxlLWVkaXRtb2RlL3Vpay10YWJsZS1lZGl0bW9kZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ1UsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQXFCLE1BQU0sRUFBaUIsU0FBUyxFQUNuRyxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDM0QsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2pELE9BQU8sRUFBRSxRQUFRLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQzs7Ozs7OztBQVF2RSxNQUFNLE9BQU8seUJBQXlCO0lBbUNwQztRQWxDUyxZQUFPLEdBQStCLFNBQVMsQ0FBQztRQUVoRCxvQkFBZSxHQUFHLEtBQUssQ0FBQztRQUN4QixlQUFVLEdBQTRCLElBQUksa0JBQWtCLEVBQUUsQ0FBQztRQUMvRCxxQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDekIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUVuQixpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUNsQixvQkFBZSxHQUFHLEtBQUssQ0FBQztRQUV2QixrQkFBYSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzNELHFCQUFnQixHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBQzlELGNBQVMsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN2RCxlQUFVLEdBQXNC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SyxDQUFDLE1BQTJCLENBQUMsS0FBSyxDQUFDO1FBQzdELElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUUxRCxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFO1lBQzdCLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ3ZDO1FBRUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7SUFDNUIsQ0FBQztJQUVNLFFBQVEsQ0FBQyxLQUFhO1FBQzNCLElBQUksWUFBWSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzVILE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxZQUFZLElBQUksTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzlHLElBQUksYUFBYSxJQUFJLGFBQWEsQ0FBQyxXQUFXLEVBQUU7WUFDOUMsYUFBYTtZQUNiLDJDQUEyQztZQUMzQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDL047UUFDRCxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDO0lBRU8sc0JBQXNCO1FBQzVCLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixLQUFLLE1BQU0sTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3pDO1lBQ0QsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FBQztTQUNoRTtJQUNILENBQUM7SUFFTyxpQkFBaUI7UUFDdkIsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLEVBQUU7Z0JBQ3hELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQzthQUNqRDtZQUNELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ3JHO0lBQ0gsQ0FBQztJQUVPLGFBQWE7UUFDbkIsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ25CLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7U0FDbEM7SUFDSCxDQUFDO0lBRU8sZ0JBQWdCO1FBQ3RCLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7U0FDNUM7SUFDSCxDQUFDOytHQTdLVSx5QkFBeUI7bUdBQXpCLHlCQUF5QixpaUJBZ0J6QixZQUFZLHVFQUdaLE9BQU8sd0VBRVAsUUFBUSxxRUNsQ3JCLGtyTkFvSEE7OzRGRHZHYSx5QkFBeUI7a0JBTHJDLFNBQVM7K0JBQ0UseUJBQXlCOzBFQUsxQixPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csaUJBQWlCO3NCQUF6QixLQUFLO2dCQUNHLGVBQWU7c0JBQXZCLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxnQkFBZ0I7c0JBQXhCLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxrQkFBa0I7c0JBQTFCLEtBQUs7Z0JBQ0csWUFBWTtzQkFBcEIsS0FBSztnQkFDRyxlQUFlO3NCQUF2QixLQUFLO2dCQUVJLGFBQWE7c0JBQXRCLE1BQU07Z0JBQ0csZ0JBQWdCO3NCQUF6QixNQUFNO2dCQUNHLFNBQVM7c0JBQWxCLE1BQU07Z0JBQ0csVUFBVTtzQkFBbkIsTUFBTTtnQkFHUCxTQUFTO3NCQURSLFNBQVM7dUJBQUMsWUFBWTtnQkFHSCxJQUFJO3NCQUF2QixTQUFTO3VCQUFDLE9BQU87Z0JBR2xCLEtBQUs7c0JBREosU0FBUzt1QkFBQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3V0cHV0LCBTaW1wbGVDaGFuZ2VzLCBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRQYWdpbmF0b3IgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9wYWdpbmF0b3InO1xuaW1wb3J0IHsgTWF0U29ydCB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NvcnQnO1xuaW1wb3J0IHsgTWF0VGFibGUsIE1hdFRhYmxlRGF0YVNvdXJjZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3RhYmxlJztcbmltcG9ydCB7IElDb2x1bW5zRWRpdCB9IGZyb20gJy4vaW50ZXJmYWNlcy91aWtFZGl0VGFibGUuaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZW5nby11aWstdGFibGUtZWRpdG1vZGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vdWlrLXRhYmxlLWVkaXRtb2RlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdWlrLXRhYmxlLWVkaXRtb2RlLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBVaWtUYWJsZUVkaXRtb2RlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIEFmdGVyVmlld0luaXQge1xuICBASW5wdXQoKSBjb2x1bW5zOiBJQ29sdW1uc0VkaXRbXSB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgc3RhdHVzSGVhZGVyTGFiZWw/OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNob3dTdGF0dXNMYWJlbCA9IGZhbHNlO1xuICBASW5wdXQoKSBkYXRhU291cmNlOiBNYXRUYWJsZURhdGFTb3VyY2U8YW55PiA9IG5ldyBNYXRUYWJsZURhdGFTb3VyY2UoKTtcbiAgQElucHV0KCkgZW5hYmxlUGFnaW5hdGlvbiA9IGZhbHNlO1xuICBASW5wdXQoKSBlbmFibGVTb3J0ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGhhc1Blcm1pc3Npb25Xcml0ZT86IGJvb2xlYW47XG4gIEBJbnB1dCgpIGlkQ29sdW1uTmFtZSA9ICcnO1xuICBASW5wdXQoKSBlbmFibGVGaWx0ZXJpbmcgPSBmYWxzZTtcblxuICBAT3V0cHV0KCkgc2F2ZUVudHJ5RGF0YTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpIGRlbGV0ZUVudHJ5Um93aWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKSBlZGl0Um93SWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKSBjYWxsQWN0aW9uOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIEBWaWV3Q2hpbGQoTWF0UGFnaW5hdG9yKVxuICBwYWdpbmF0b3IhOiBNYXRQYWdpbmF0b3IgfCBudWxsO1xuXG4gIEBWaWV3Q2hpbGQoTWF0U29ydCkgc29ydCE6IE1hdFNvcnQ7XG5cbiAgQFZpZXdDaGlsZChNYXRUYWJsZSlcbiAgdGFibGUhOiBNYXRUYWJsZTxhbnk+O1xuXG4gIHB1YmxpYyBkaXNwbGF5ZWRDb2x1bW5zOiBzdHJpbmdbXSA9IFtdO1xuICBwdWJsaWMgZWRpdE1vZGUgPSBmYWxzZTtcbiAgcHVibGljIGVkaXRNb2RlSW5kZXg6IG51bWJlciB8IG51bGwgPSBudWxsO1xuXG4gIHB1YmxpYyBwYWdlSW5kZXggPSAwO1xuICBwdWJsaWMgcGFnZVNpemUgPSAwO1xuICBwdWJsaWMgY29ycmVjdEluZGV4ID0gMDtcblxuICBwdWJsaWMgbmV3RGF0YTogYW55O1xuICBwdWJsaWMgY2hhbmdlID0gMDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHRoaXMucmVuZGVyRGlzcGxheWVkQ29sdW1ucygpO1xuICAgIHRoaXMudGFibGUucmVuZGVyUm93cygpO1xuICAgIHRoaXMucmVuZGVyU29ydGluZygpO1xuICAgIHRoaXMucmVuZGVyUGFnaW5hdGlvbigpO1xuICAgIHRoaXMucmVuZGVyU3RhdHVzTGFiZWwoKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAodGhpcy50YWJsZSkge1xuICAgICAgaWYgKGNoYW5nZXNbXCJkYXRhU291cmNlXCJdKSB7XG4gICAgICAgIHRoaXMudGFibGUuZGF0YVNvdXJjZSA9IHRoaXMuZGF0YVNvdXJjZTtcbiAgICAgIH1cbiAgICAgIHRoaXMudGFibGUucmVuZGVyUm93cygpO1xuICAgICAgdGhpcy5yZW5kZXJTb3J0aW5nKCk7XG4gICAgICB0aGlzLnJlbmRlclBhZ2luYXRpb24oKTtcbiAgICAgIHRoaXMucmVuZGVyU3RhdHVzTGFiZWwoKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBlbmFibGVFZGl0TW9kZShpbmRleDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKHRoaXMuaGFzUGVybWlzc2lvbldyaXRlKSB7XG4gICAgICB0aGlzLmVkaXRNb2RlID0gdHJ1ZTtcbiAgICAgIGlmICh0aGlzLnBhZ2luYXRvciAmJiB0aGlzLmVuYWJsZVBhZ2luYXRpb24pIHtcbiAgICAgICAgdGhpcy5wYWdlSW5kZXggPSB0aGlzLnBhZ2luYXRvci5wYWdlSW5kZXg7XG4gICAgICAgIHRoaXMucGFnZVNpemUgPSB0aGlzLnBhZ2luYXRvci5wYWdlU2l6ZTtcbiAgICAgICAgdGhpcy5jb3JyZWN0SW5kZXggPSB0aGlzLnBhZ2VJbmRleCAqIHRoaXMucGFnZVNpemU7XG4gICAgICAgIGluZGV4ID0gaW5kZXggKyB0aGlzLmNvcnJlY3RJbmRleDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGVsZW1lbnRJZCA9IHRoaXMuZGF0YVNvdXJjZS5maWx0ZXJlZERhdGFbK2luZGV4XS5pZDtcbiAgICAgIGlmICh0aGlzLmVuYWJsZUZpbHRlcmluZyAmJiAhIXRoaXMuZGF0YVNvdXJjZS5maWx0ZXIpIHtcbiAgICAgICAgY29uc3QgaW5kZXhPZkZpbHRlcmVkID0gdGhpcy5kYXRhU291cmNlLmRhdGEuZmluZEluZGV4KChlKSA9PiBlLmlkID09PSBlbGVtZW50SWQpO1xuICAgICAgICBpZiAoaW5kZXhPZkZpbHRlcmVkKSB7XG4gICAgICAgICAgaW5kZXggPSBpbmRleE9mRmlsdGVyZWQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuZWRpdE1vZGVJbmRleCA9IGluZGV4O1xuICAgICAgdGhpcy5uZXdEYXRhID0gdGhpcy5kYXRhU291cmNlLmZpbHRlcmVkRGF0YVtpbmRleF07XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGNoYW5nZUlucHV0VmFsdWUoYmFja2VuZE5hbWU6IHN0cmluZywgaW5kZXg6IG51bWJlciwgYmFja2VuZFBhdGg/OiBzdHJpbmcpOiB2b2lkIHtcbiAgICBpZiAoYmFja2VuZFBhdGgpIHtcbiAgICAgIHRoaXMubmV3RGF0YVtiYWNrZW5kUGF0aF1bYmFja2VuZE5hbWVdID0gKChcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYmFja2VuZE5hbWUgKyBpbmRleClcbiAgICAgICkgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWU7XG4gICAgICB0aGlzLmNoYW5nZSsrO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm5ld0RhdGFbYmFja2VuZE5hbWVdID0gKChcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYmFja2VuZE5hbWUgKyBpbmRleClcbiAgICAgICkgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWU7XG4gICAgICB0aGlzLmNoYW5nZSsrO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBlbWl0U2F2ZUVudHJ5KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmhhc1Blcm1pc3Npb25Xcml0ZSkge1xuICAgICAgdGhpcy5zYXZlRW50cnlEYXRhLmVtaXQodGhpcy5uZXdEYXRhKTtcbiAgICAgIHRoaXMuZWRpdFJvd0lkLmVtaXQodGhpcy5lZGl0TW9kZUluZGV4KTtcbiAgICAgIHRoaXMuY2FsbEFjdGlvbi5lbWl0KCdzYXZlJyk7XG4gICAgICB0aGlzLmVkaXRNb2RlID0gZmFsc2U7XG4gICAgICB0aGlzLmNoYW5nZSA9IDA7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGRlbGV0ZUVudHJ5KGluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLmRlbGV0ZUVudHJ5Um93aWQuZW1pdCh0aGlzLmdldFJvd2lkKGluZGV4KSk7XG4gICAgdGhpcy5jYWxsQWN0aW9uLmVtaXQoJ2RlbGV0ZScpO1xuICAgIHRoaXMuZWRpdE1vZGUgPSBmYWxzZTtcbiAgICB0aGlzLmNoYW5nZSA9IDA7XG4gIH1cblxuICBwdWJsaWMgY2FuY2VsKCk6IHZvaWQge1xuICAgIHRoaXMuZWRpdE1vZGUgPSBmYWxzZTtcbiAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gIH1cblxuICBwdWJsaWMgb25DaGFuZ2VQYWdpbmF0aW9uKGV2ZW50OiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmVkaXRNb2RlID0gZmFsc2U7XG4gIH1cblxuICBwdWJsaWMgYXBwbHlGaWx0ZXIoZXZlbnQ6IEV2ZW50KTogdm9pZCB7XG4gICAgY29uc3QgZmlsdGVyVmFsdWUgPSAoZXZlbnQudGFyZ2V0IGFzIEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlO1xuICAgIHRoaXMuZGF0YVNvdXJjZS5maWx0ZXIgPSBmaWx0ZXJWYWx1ZS50cmltKCkudG9Mb3dlckNhc2UoKTtcblxuICAgIGlmICh0aGlzLmRhdGFTb3VyY2UucGFnaW5hdG9yKSB7XG4gICAgICB0aGlzLmRhdGFTb3VyY2UucGFnaW5hdG9yLmZpcnN0UGFnZSgpO1xuICAgIH1cblxuICAgIHRoaXMuZWRpdE1vZGUgPSBmYWxzZTtcbiAgICB0aGlzLmVkaXRNb2RlSW5kZXggPSBudWxsO1xuICB9XG5cbiAgcHVibGljIGdldFJvd2lkKGluZGV4OiBudW1iZXIpOiBzdHJpbmcge1xuICAgIGxldCBuZXdEYXRhUm93SWQgPSAhIXRoaXMuZGF0YVNvdXJjZS5kYXRhW2luZGV4XS5yb3dpZCA/IHRoaXMuZGF0YVNvdXJjZS5kYXRhW2luZGV4XS5yb3dpZCA6IHRoaXMuZGF0YVNvdXJjZS5kYXRhW2luZGV4XS5pZDtcbiAgICBjb25zdCBiYWNrZW5kUGF0aElkID0gdGhpcy5jb2x1bW5zPy5maW5kKChjb2x1bW4pID0+IGNvbHVtbi5uYW1lID09PSB0aGlzLmlkQ29sdW1uTmFtZSAmJiBjb2x1bW4uYmFja2VuZFBhdGgpO1xuICAgIGlmIChiYWNrZW5kUGF0aElkICYmIGJhY2tlbmRQYXRoSWQuYmFja2VuZFBhdGgpIHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtbGluZS1sZW5ndGhcbiAgICAgIG5ld0RhdGFSb3dJZCA9IHRoaXMuZGF0YVNvdXJjZS5kYXRhW2luZGV4XVtiYWNrZW5kUGF0aElkLmJhY2tlbmRQYXRoXVtiYWNrZW5kUGF0aElkLmJhY2tlbmROYW1lXSB8fCB0aGlzLmRhdGFTb3VyY2UuZGF0YVtpbmRleF1bYmFja2VuZFBhdGhJZC5iYWNrZW5kUGF0aF0uaWQgfHwgdGhpcy5kYXRhU291cmNlLmRhdGFbaW5kZXhdW2JhY2tlbmRQYXRoSWQuYmFja2VuZFBhdGhdLnJvd2lkO1xuICAgIH1cbiAgICByZXR1cm4gbmV3RGF0YVJvd0lkO1xuICB9XG5cbiAgcHJpdmF0ZSByZW5kZXJEaXNwbGF5ZWRDb2x1bW5zKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmNvbHVtbnMpIHtcbiAgICAgIGZvciAoY29uc3QgY29sdW1uIG9mIHRoaXMuY29sdW1ucykge1xuICAgICAgICB0aGlzLmRpc3BsYXllZENvbHVtbnMucHVzaChjb2x1bW4ubmFtZSk7XG4gICAgICB9XG4gICAgICB0aGlzLmRpc3BsYXllZENvbHVtbnMucHVzaCgnZWRpdCcsICdzYXZlJywgJ2RlbGV0ZScsICdjYW5jZWwnKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHJlbmRlclN0YXR1c0xhYmVsKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnNob3dTdGF0dXNMYWJlbCkge1xuICAgICAgaWYgKCF0aGlzLmRpc3BsYXllZENvbHVtbnMuaW5jbHVkZXMoJ3N0YXR1c0xhYmVsQ29sdW1uJykpIHtcbiAgICAgICAgdGhpcy5kaXNwbGF5ZWRDb2x1bW5zLnB1c2goJ3N0YXR1c0xhYmVsQ29sdW1uJyk7XG4gICAgICB9XG4gICAgICB0aGlzLmRhdGFTb3VyY2UuZGF0YS5mb3JFYWNoKGVsZW1lbnQgPT4gZWxlbWVudC5zdGF0dXNMYWJlbENvbHVtbiA9IGVsZW1lbnQuc3RhdHVzTGFiZWwubGFiZWxWYWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSByZW5kZXJTb3J0aW5nKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmVuYWJsZVNvcnQpIHtcbiAgICAgIHRoaXMuZGF0YVNvdXJjZS5zb3J0ID0gdGhpcy5zb3J0O1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgcmVuZGVyUGFnaW5hdGlvbigpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5lbmFibGVQYWdpbmF0aW9uKSB7XG4gICAgICB0aGlzLmRhdGFTb3VyY2UucGFnaW5hdG9yID0gdGhpcy5wYWdpbmF0b3I7XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2ICpuZ0lmPVwiZW5hYmxlRmlsdGVyaW5nXCIgY2xhc3M9XCJmb3JtXCI+XG4gIDxsYWJlbCBjbGFzcz1cImlucFwiIGZvcj1cImlucFwiPlxuICAgIDxpbnB1dCAoa2V5dXApPVwiYXBwbHlGaWx0ZXIoJGV2ZW50KVwiIGlkPVwiaW5wXCIgcGxhY2Vob2xkZXI9XCIgXCIgdHlwZT1cInRleHRcIj5cbiAgICA8c3BhbiBjbGFzcz1cImxhYmVsXCI+U3VjaGVuICYgRmlsdGVybjwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz1cImZvY3VzLWJnXCI+PC9zcGFuPlxuICA8L2xhYmVsPlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwidGFibGUtY29udGFpbmVyXCI+XG4gIDx0YWJsZSAjdGFibGUgW2RhdGFTb3VyY2VdPVwiZGF0YVNvdXJjZVwiIGNsYXNzPVwiaW52ZW50YXItdGFibGUgbWF0LWVsZXZhdGlvbi16OFwiIG1hdC10YWJsZSBtYXRTb3J0PlxuICAgIDxkaXYgKm5nSWY9XCJlbmFibGVTb3J0XCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBjb2x1bW4gb2YgY29sdW1uc1wiIG1hdENvbHVtbkRlZj17e2NvbHVtbi5uYW1lfX0+XG4gICAgICAgIDx0aCAqbWF0SGVhZGVyQ2VsbERlZiBtYXQtaGVhZGVyLWNlbGwgbWF0LXNvcnQtaGVhZGVyPiB7e2NvbHVtbi5kaXNwbGF5TmFtZX19IDwvdGg+XG4gICAgICAgIDx0ZCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50OyBpbmRleCBhcyBpXCIgY2xhc3M9XCJ0YWJsZS1jb2x1bW5cIiBtYXQtY2VsbD5cbiAgICAgICAgICA8aW5wdXQgKGtleXVwKT1cImNoYW5nZUlucHV0VmFsdWUoY29sdW1uLmJhY2tlbmROYW1lLCBpLCBjb2x1bW4uYmFja2VuZFBhdGgpXCJcbiAgICAgICAgICAgICAgICAgKm5nSWY9XCIhIWNvbHVtbi5iYWNrZW5kUGF0aCAmJiBjb2x1bW4uZWRpdGFibGVcIlxuICAgICAgICAgICAgICAgICBbZGlzYWJsZWRdPVwiIWVkaXRNb2RlIHx8IChpICsgY29ycmVjdEluZGV4KSAhPT0gZWRpdE1vZGVJbmRleFwiXG4gICAgICAgICAgICAgICAgIFtpZF09XCJjb2x1bW4uYmFja2VuZE5hbWUgKyBpXCJcbiAgICAgICAgICAgICAgICAgW3BhdHRlcm5dPVwiISEhY29sdW1uLmlucHV0VmFsaWRhdGlvblBhdHRlcm4gPyBjb2x1bW4uaW5wdXRWYWxpZGF0aW9uUGF0dGVybiA6ICcnXCJcbiAgICAgICAgICAgICAgICAgW3N0eWxlXT1cImNvbHVtbi5zdHlsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgW3ZhbHVlXT1cImVsZW1lbnRbY29sdW1uLmJhY2tlbmRQYXRoLnRvU3RyaW5nKCldW2NvbHVtbi5iYWNrZW5kTmFtZV1cIlxuICAgICAgICAgICAgICAgICBuYW1lPXt7Y29sdW1uLm5hbWV9fT5cbiAgICAgICAgICA8aW5wdXQgKGtleXVwKT1cImNoYW5nZUlucHV0VmFsdWUoY29sdW1uLmJhY2tlbmROYW1lLCBpKVwiXG4gICAgICAgICAgICAgICAgICpuZ0lmPVwiY29sdW1uLmJhY2tlbmRQYXRoID09PSB1bmRlZmluZWQgJiYgY29sdW1uLmVkaXRhYmxlXCJcbiAgICAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cIiFlZGl0TW9kZSB8fCAoaSArIGNvcnJlY3RJbmRleCkgIT09IGVkaXRNb2RlSW5kZXhcIlxuICAgICAgICAgICAgICAgICBbaWRdPVwiY29sdW1uLmJhY2tlbmROYW1lICsgaVwiXG4gICAgICAgICAgICAgICAgIFtwYXR0ZXJuXT1cIiEhIWNvbHVtbi5pbnB1dFZhbGlkYXRpb25QYXR0ZXJuID8gY29sdW1uLmlucHV0VmFsaWRhdGlvblBhdHRlcm4gOiAnJ1wiXG4gICAgICAgICAgICAgICAgIFtzdHlsZV09XCJjb2x1bW4uc3R5bGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgIFt2YWx1ZV09XCJlbGVtZW50W2NvbHVtbi5iYWNrZW5kTmFtZV1cIlxuICAgICAgICAgICAgICAgICBuYW1lPXt7Y29sdW1uLm5hbWV9fT5cbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgKm5nSWY9XCIhY29sdW1uLmVkaXRhYmxlICYmICEhY29sdW1uLmJhY2tlbmRQYXRoXCI+e3tlbGVtZW50W2NvbHVtbi5iYWNrZW5kUGF0aC50b1N0cmluZygpXVtjb2x1bW4uYmFja2VuZE5hbWVdfX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4gKm5nSWY9XCIhY29sdW1uLmVkaXRhYmxlICYmIGNvbHVtbi5iYWNrZW5kUGF0aCA9PT0gdW5kZWZpbmVkXCI+e3tlbGVtZW50W2NvbHVtbi5iYWNrZW5kTmFtZV19fTwvc3Bhbj5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwic2hvd1N0YXR1c0xhYmVsXCIgbWF0Q29sdW1uRGVmPVwic3RhdHVzTGFiZWxDb2x1bW5cIj5cbiAgICAgICAgPHRoICptYXRIZWFkZXJDZWxsRGVmIG1hdC1oZWFkZXItY2VsbCBtYXQtc29ydC1oZWFkZXI+e3tzdGF0dXNIZWFkZXJMYWJlbH19PC90aD5cbiAgICAgICAgPHRkICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnQ7IGluZGV4IGFzIGlcIiBtYXQtY2VsbD5cbiAgICAgICAgICA8ZW5nby11aWstc3RhdHVzLWxhYmVsIFtsYWJlbERhdGFdPVwiZWxlbWVudC5zdGF0dXNMYWJlbFwiPjwvZW5nby11aWstc3RhdHVzLWxhYmVsPlxuICAgICAgICA8L3RkPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2ICpuZ0lmPVwiIWVuYWJsZVNvcnRcIj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBjb2x1bW5zXCIgbWF0Q29sdW1uRGVmPXt7Y29sdW1uLm5hbWV9fT5cbiAgICAgICAgPHRoICptYXRIZWFkZXJDZWxsRGVmIG1hdC1oZWFkZXItY2VsbD4ge3tjb2x1bW4uZGlzcGxheU5hbWV9fSA8L3RoPlxuICAgICAgICA8dGQgKm1hdENlbGxEZWY9XCJsZXQgZWxlbWVudDsgaW5kZXggYXMgaVwiIGNsYXNzPVwidGFibGUtY29sdW1uXCIgbWF0LWNlbGw+XG4gICAgICAgICAgPGlucHV0IChrZXl1cCk9XCJjaGFuZ2VJbnB1dFZhbHVlKGNvbHVtbi5iYWNrZW5kTmFtZSwgaSwgY29sdW1uLmJhY2tlbmRQYXRoKVwiXG4gICAgICAgICAgICAgICAgICpuZ0lmPVwiISFjb2x1bW4uYmFja2VuZFBhdGhcIlxuICAgICAgICAgICAgICAgICBbZGlzYWJsZWRdPVwiIWVkaXRNb2RlIHx8IChpICsgY29ycmVjdEluZGV4KSAhPT0gZWRpdE1vZGVJbmRleFwiXG4gICAgICAgICAgICAgICAgIFtpZF09XCJjb2x1bW4uYmFja2VuZE5hbWUgKyBpXCJcbiAgICAgICAgICAgICAgICAgW3BhdHRlcm5dPVwiISEhY29sdW1uLmlucHV0VmFsaWRhdGlvblBhdHRlcm4gPyBjb2x1bW4uaW5wdXRWYWxpZGF0aW9uUGF0dGVybiA6ICcnXCJcbiAgICAgICAgICAgICAgICAgW3N0eWxlXT1cImNvbHVtbi5zdHlsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgW3ZhbHVlXT1cImVsZW1lbnRbY29sdW1uLmJhY2tlbmRQYXRoLnRvU3RyaW5nKCldW2NvbHVtbi5iYWNrZW5kTmFtZV1cIlxuICAgICAgICAgICAgICAgICBuYW1lPXt7Y29sdW1uLm5hbWV9fT5cbiAgICAgICAgICA8aW5wdXQgKGtleXVwKT1cImNoYW5nZUlucHV0VmFsdWUoY29sdW1uLmJhY2tlbmROYW1lLCBpKVwiICpuZ0lmPVwiY29sdW1uLmJhY2tlbmRQYXRoID09PSB1bmRlZmluZWRcIlxuICAgICAgICAgICAgICAgICBbZGlzYWJsZWRdPVwiIWVkaXRNb2RlIHx8IChpICsgY29ycmVjdEluZGV4KSAhPT0gZWRpdE1vZGVJbmRleFwiXG4gICAgICAgICAgICAgICAgIFtpZF09XCJjb2x1bW4uYmFja2VuZE5hbWUgKyBpXCJcbiAgICAgICAgICAgICAgICAgW3BhdHRlcm5dPVwiISEhY29sdW1uLmlucHV0VmFsaWRhdGlvblBhdHRlcm4gPyBjb2x1bW4uaW5wdXRWYWxpZGF0aW9uUGF0dGVybiA6ICcnXCJcbiAgICAgICAgICAgICAgICAgW3N0eWxlXT1cImNvbHVtbi5zdHlsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgW3ZhbHVlXT1cImVsZW1lbnRbY29sdW1uLmJhY2tlbmROYW1lXVwiXG4gICAgICAgICAgICAgICAgIG5hbWU9e3tjb2x1bW4ubmFtZX19PlxuICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAqbmdJZj1cIiFjb2x1bW4uZWRpdGFibGUgJiYgISFjb2x1bW4uYmFja2VuZFBhdGhcIj57e2VsZW1lbnRbY29sdW1uLmJhY2tlbmRQYXRoLnRvU3RyaW5nKCldW2NvbHVtbi5iYWNrZW5kTmFtZV19fTwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiAqbmdJZj1cIiFjb2x1bW4uZWRpdGFibGUgJiYgY29sdW1uLmJhY2tlbmRQYXRoID09PSB1bmRlZmluZWRcIj57e2VsZW1lbnRbY29sdW1uLmJhY2tlbmROYW1lXX19PC9zcGFuPlxuICAgICAgICA8L3RkPlxuICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJzaG93U3RhdHVzTGFiZWxcIiBtYXRDb2x1bW5EZWY9XCJzdGF0dXNMYWJlbENvbHVtblwiPlxuICAgICAgICA8dGggKm1hdEhlYWRlckNlbGxEZWYgbWF0LWhlYWRlci1jZWxsPnt7c3RhdHVzSGVhZGVyTGFiZWx9fTwvdGg+XG4gICAgICAgIDx0ZCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50OyBpbmRleCBhcyBpXCIgbWF0LWNlbGw+XG4gICAgICAgICAgPGVuZ28tdWlrLXN0YXR1cy1sYWJlbCBbbGFiZWxEYXRhXT1cImVsZW1lbnQuc3RhdHVzTGFiZWxcIj48L2VuZ28tdWlrLXN0YXR1cy1sYWJlbD5cbiAgICAgICAgPC90ZD5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuXG4gICAgPG5nLWNvbnRhaW5lciBtYXRDb2x1bW5EZWY9XCJlZGl0XCI+XG4gICAgICA8dGggKm1hdEhlYWRlckNlbGxEZWYgbWF0LWhlYWRlci1jZWxsPjxpIGNsYXNzPVwiaGVhZGVyLWljb25zIGZhIGZhLXBlblwiPjwvaT48L3RoPlxuICAgICAgPHRkICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnQ7IGluZGV4IGFzIGlcIiBtYXQtY2VsbD48YSAoY2xpY2spPVwiZW5hYmxlRWRpdE1vZGUoaSlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKm5nSWY9XCIhZWRpdE1vZGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJidG4taWNvbi1idXR0b24gdGFibGUtcm93LWFjdGlvbiBlZGl0LWFjdGlvblwiPlxuICAgICAgICA8aSBjbGFzcz1cImZhIGZhLXBlblwiPjwvaT5cbiAgICAgIDwvYT48L3RkPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgbWF0Q29sdW1uRGVmPVwiY2FuY2VsXCI+XG4gICAgICA8dGggKm1hdEhlYWRlckNlbGxEZWYgbWF0LWhlYWRlci1jZWxsPjxpIGNsYXNzPVwiaGVhZGVyLWljb25zIGZhIGZhLXdpbmRvdy1jbG9zZVwiPjwvaT48L3RoPlxuICAgICAgPHRkICptYXRDZWxsRGVmPVwibGV0IGVsZW1lbnQ7IGluZGV4IGFzIGlcIiBtYXQtY2VsbD5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIChjbGljayk9XCJjYW5jZWwoKVwiICpuZ0lmPVwiZWRpdE1vZGUgJiYgZWRpdE1vZGVJbmRleCA9PT0gaSArIHBhZ2VJbmRleCAqIHBhZ2VTaXplXCJcbiAgICAgICAgICBjbGFzcz1cImJ0bi1pY29uLWJ1dHRvbiBidG4tY2FuY2VsXCI+PGkgY2xhc3M9XCJmYSBmYS13aW5kb3ctY2xvc2VcIj48L2k+PC9idXR0b24+XG4gICAgICA8L3RkPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgbWF0Q29sdW1uRGVmPVwic2F2ZVwiPlxuICAgICAgPHRoICptYXRIZWFkZXJDZWxsRGVmIG1hdC1oZWFkZXItY2VsbD48aSBjbGFzcz1cImhlYWRlci1pY29ucyBmYSBmYS1zYXZlXCI+PC9pPjwvdGg+XG4gICAgICA8dGQgKm1hdENlbGxEZWY9XCJsZXQgZWxlbWVudDsgaW5kZXggYXMgaVwiIG1hdC1jZWxsPlxuICAgICAgICA8YnV0dG9uIChjbGljayk9XCJlbWl0U2F2ZUVudHJ5KClcIiAqbmdJZj1cImVkaXRNb2RlICYmIGVkaXRNb2RlSW5kZXggPT09IGkgKyBwYWdlSW5kZXggKiBwYWdlU2l6ZVwiXG4gICAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cImNoYW5nZSA9PT0gMFwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJidG4taWNvbi1idXR0b25cIiBpZD1cInNhdmVCdG5cIiB0eXBlPVwic3VibWl0XCI+PGlcbiAgICAgICAgICBbbmdDbGFzc109XCJjaGFuZ2UgPT09IDAgPyAnaW52ZW50b3J5LWJ1dHRvbi1kaXNhYmxlZCcgOiAnJ1wiIGNsYXNzPVwiZmEgZmEtc2F2ZVwiPjwvaT48L2J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLWNvbnRhaW5lciBtYXRDb2x1bW5EZWY9XCJkZWxldGVcIj5cbiAgICAgIDx0aCAqbWF0SGVhZGVyQ2VsbERlZiBtYXQtaGVhZGVyLWNlbGw+PGkgY2xhc3M9XCJoZWFkZXItaWNvbnMgZmEgZmEtdHJhc2hcIj48L2k+PC90aD5cbiAgICAgIDx0ZCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50OyBpbmRleCBhcyBpXCIgbWF0LWNlbGw+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICAoY2xpY2spPVwiZGVsZXRlRW50cnkoaSlcIiAqbmdJZj1cImVkaXRNb2RlICYmIGVkaXRNb2RlSW5kZXggPT09IGkgKyBwYWdlSW5kZXggKiBwYWdlU2l6ZVwiXG4gICAgICAgICAgY2xhc3M9XCJidG4taWNvbi1idXR0b24gYnRuLWNhbmNlbFwiPjxpIGNsYXNzPVwiZmEgZmEtdHJhc2hcIj48L2k+PC9idXR0b24+XG4gICAgICA8L3RkPlxuICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgPHRyICptYXRIZWFkZXJSb3dEZWY9XCJkaXNwbGF5ZWRDb2x1bW5zOyBzdGlja3k6IHRydWVcIiBtYXQtaGVhZGVyLXJvdz48L3RyPlxuICAgIDx0ciAqbWF0Um93RGVmPVwibGV0IGVsZW1lbnQ7IGNvbHVtbnM6IGRpc3BsYXllZENvbHVtbnM7XCIgbWF0LXJvdz48L3RyPlxuICA8L3RhYmxlPlxuICA8bWF0LXBhZ2luYXRvciAocGFnZSk9XCJvbkNoYW5nZVBhZ2luYXRpb24oJGV2ZW50KVwiICpuZ0lmPVwiZW5hYmxlUGFnaW5hdGlvblwiIFtwYWdlU2l6ZU9wdGlvbnNdPVwiWzEwLCAyNSwgNTAsIDEwMCwgMjAwXVwiXG4gICAgICAgICAgICAgICAgIHNob3dGaXJzdExhc3RCdXR0b25zPjwvbWF0LXBhZ2luYXRvcj5cbjwvZGl2PlxuIl19