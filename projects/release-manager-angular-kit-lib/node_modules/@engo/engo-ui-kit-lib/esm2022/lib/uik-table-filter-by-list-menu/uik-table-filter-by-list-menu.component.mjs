import { Component, EventEmitter, Input, Output } from '@angular/core';
import { cloneDeep as _cloneDeep } from "lodash";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/menu";
import * as i3 from "@angular/material/badge";
import * as i4 from "primeng/dropdown";
import * as i5 from "primeng/api";
import * as i6 from "@angular/forms";
import * as i7 from "primeng/multiselect";
export class UikTableFilterByListMenuComponent {
    constructor() {
        this.selectedOptions = [];
        this.selectedOptionModel = { id: '', label: '' };
        this.selectedOptionsModel = [];
        this.selectedOption = '';
        this.filteredOptions = [];
        this.filteredOption = '';
        this.options = [];
        this.label = 'Filtern';
        this.multiple = true;
        this.filterStatusEmitter = new EventEmitter();
    }
    ngOnInit() {
    }
    emit() {
        this.filteredOption = _cloneDeep(this.selectedOption);
        this.filteredOptions = _cloneDeep(this.selectedOptions);
        this.filterStatusEmitter.emit(this.multiple ? this.selectedOptions : this.selectedOption);
    }
    clear() {
        this.selectedOptions = [];
        this.selectedOption = '';
        this.selectedOptionsModel = [];
        this.selectedOptionModel = { id: '', label: '' };
        this.filteredOption = '';
        this.filteredOptions = [];
        this.filterStatusEmitter.emit(this.selectedOptions);
    }
    onSelectChange($event) {
        if (!!$event.value) {
            if (this.multiple) {
                this.selectedOptions = $event.value.map((v) => v.id);
            }
            else {
                this.selectedOption = $event.value.id;
            }
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikTableFilterByListMenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UikTableFilterByListMenuComponent, selector: "engo-uik-table-filter-by-list-menu", inputs: { options: "options", label: "label", multiple: "multiple" }, outputs: { filterStatusEmitter: "filterStatusEmitter" }, ngImport: i0, template: "<button #filtertrigger=\"matMenuTrigger\" [class.menu-opened]=\"filtertrigger.menuOpen\"\n        [matBadge]=\"!multiple && filteredOption !== '' ? 1 : filteredOptions.length === 0 ? undefined : filteredOptions.length\"\n        [matMenuTriggerFor]=\"filterMenu\"\n        class=\"btn btn-white-border-gray filter-button\">\n  <i class=\"fa-solid fa-filter filter-icon\"></i>{{label}}\n</button>\n<mat-menu #filterMenu>\n  <div (click)=\"$event.stopPropagation(); $event.preventDefault\" class=\"filter-container\">\n    <div class=\"multiple-filter\" *ngIf=\"multiple\">\n      <p-multiSelect [options]=\"options\" appendTo=\"body\" (onChange)=\"onSelectChange($event)\" [placeholder]=\"label\" [filter]=\"true\" filterBy=\"label\" [showClear]=\"false\" [(ngModel)]=\"selectedOptionsModel\" [defaultLabel]=\"label\" optionLabel=\"label\"\n                     class=\"multiselect-custom\">\n        <ng-template let-value pTemplate=\"selectedItems\">\n          <div class=\"country-item country-item-value\" *ngFor=\"let option of selectedOptionsModel\">\n            <div>{{option.label}}</div>\n          </div>\n          <div *ngIf=\"!selectedOptionsModel || selectedOptionsModel.length === 0\" class=\"country-placeholder\">\n            {{label}}\n          </div>\n        </ng-template>\n        <ng-template let-each pTemplate=\"item\">\n          <div class=\"country-item\">\n            <div>{{each.label}}</div>\n          </div>\n        </ng-template>\n      </p-multiSelect>\n    </div>\n    <div class=\"single-filter\" *ngIf=\"!multiple\">\n      <p-dropdown (onChange)=\"onSelectChange($event)\" appendTo=\"body\" [(ngModel)]=\"selectedOptionModel\" [filter]=\"true\" [options]=\"options\" [showClear]=\"false\" filterBy=\"label\" optionLabel=\"label\" [placeholder]=\"label\">\n        <ng-template pTemplate=\"selectedItem\">\n          <div *ngIf=\"!!selectedOptionModel\">\n            <div>{{ selectedOptionModel.label }}</div>\n          </div>\n        </ng-template>\n        <ng-template let-each pTemplate=\"item\">\n          <div>\n            <div>{{ each.label }}</div>\n          </div>\n        </ng-template>\n      </p-dropdown>\n    </div>\n  </div>\n  <div class=\"save-button-container\">\n    <button (click)=\"clear()\" class=\"btn btn-white-border-gray action-button\"><i class=\"fa fa-ban btn-icon\"></i>Filter\n      l\u00F6schen\n    </button>\n    <button (click)=\"emit()\" [class.btn-disabled]=\"selectedOptions.length === 0 && selectedOption === ''\"\n            [disabled]=\"selectedOptions.length === 0 && selectedOption === ''\"\n            class=\"btn btn-white-border-gray action-button\"><i\n      class=\"fa fa-filter btn-icon\"></i>Filtern\n    </button>\n  </div>\n</mat-menu>\n", styles: [".filter-container{display:flex;flex-direction:column;padding:8px 12px}.filter-button{padding:8px 20px;margin:8px 12px 12px 8px}.filter-icon{margin-right:4px;vertical-align:middle}.menu-opened{background-color:var(--engo-green);color:var(--engo-white);border-color:var(--engo-white)}.action-button{margin:20px 12px 12px}.save-button-container{display:flex;justify-content:right;margin-right:12px;flex-wrap:wrap}/deep/ .mat-mdc-menu-panel{max-width:412px!important}/deep/ .mat-mdc-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:var(--engo-green)!important}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "directive", type: i2.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { kind: "directive", type: i3.MatBadge, selector: "[matBadge]", inputs: ["matBadgeDisabled", "matBadgeColor", "matBadgeOverlap", "matBadgePosition", "matBadge", "matBadgeDescription", "matBadgeSize", "matBadgeHidden"] }, { kind: "component", type: i4.Dropdown, selector: "p-dropdown", inputs: ["id", "scrollHeight", "filter", "name", "style", "panelStyle", "styleClass", "panelStyleClass", "readonly", "required", "editable", "appendTo", "tabindex", "placeholder", "filterPlaceholder", "filterLocale", "inputId", "dataKey", "filterBy", "filterFields", "autofocus", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "autoDisplayFirst", "group", "showClear", "emptyFilterMessage", "emptyMessage", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "overlayOptions", "ariaFilterLabel", "ariaLabel", "ariaLabelledBy", "filterMatchMode", "maxlength", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "focusOnHover", "selectOnFocus", "autoOptionFocus", "autofocusFilter", "disabled", "itemSize", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "filterValue", "options"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onShow", "onHide", "onClear", "onLazyLoad"] }, { kind: "directive", type: i5.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "directive", type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i7.MultiSelect, selector: "p-multiSelect", inputs: ["id", "ariaLabel", "style", "styleClass", "panelStyle", "panelStyleClass", "inputId", "disabled", "readonly", "group", "filter", "filterPlaceHolder", "filterLocale", "overlayVisible", "tabindex", "appendTo", "dataKey", "name", "ariaLabelledBy", "displaySelectedLabel", "maxSelectedLabels", "selectionLimit", "selectedItemsLabel", "showToggleAll", "emptyFilterMessage", "emptyMessage", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "showHeader", "filterBy", "scrollHeight", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "overlayOptions", "ariaFilterLabel", "filterMatchMode", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "autofocusFilter", "display", "autocomplete", "showClear", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "defaultLabel", "placeholder", "options", "filterValue", "itemSize", "selectAll", "focusOnHover", "filterFields", "selectOnFocus", "autoOptionFocus"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onClear", "onPanelShow", "onPanelHide", "onLazyLoad", "onRemove", "onSelectAllChange"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikTableFilterByListMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'engo-uik-table-filter-by-list-menu', template: "<button #filtertrigger=\"matMenuTrigger\" [class.menu-opened]=\"filtertrigger.menuOpen\"\n        [matBadge]=\"!multiple && filteredOption !== '' ? 1 : filteredOptions.length === 0 ? undefined : filteredOptions.length\"\n        [matMenuTriggerFor]=\"filterMenu\"\n        class=\"btn btn-white-border-gray filter-button\">\n  <i class=\"fa-solid fa-filter filter-icon\"></i>{{label}}\n</button>\n<mat-menu #filterMenu>\n  <div (click)=\"$event.stopPropagation(); $event.preventDefault\" class=\"filter-container\">\n    <div class=\"multiple-filter\" *ngIf=\"multiple\">\n      <p-multiSelect [options]=\"options\" appendTo=\"body\" (onChange)=\"onSelectChange($event)\" [placeholder]=\"label\" [filter]=\"true\" filterBy=\"label\" [showClear]=\"false\" [(ngModel)]=\"selectedOptionsModel\" [defaultLabel]=\"label\" optionLabel=\"label\"\n                     class=\"multiselect-custom\">\n        <ng-template let-value pTemplate=\"selectedItems\">\n          <div class=\"country-item country-item-value\" *ngFor=\"let option of selectedOptionsModel\">\n            <div>{{option.label}}</div>\n          </div>\n          <div *ngIf=\"!selectedOptionsModel || selectedOptionsModel.length === 0\" class=\"country-placeholder\">\n            {{label}}\n          </div>\n        </ng-template>\n        <ng-template let-each pTemplate=\"item\">\n          <div class=\"country-item\">\n            <div>{{each.label}}</div>\n          </div>\n        </ng-template>\n      </p-multiSelect>\n    </div>\n    <div class=\"single-filter\" *ngIf=\"!multiple\">\n      <p-dropdown (onChange)=\"onSelectChange($event)\" appendTo=\"body\" [(ngModel)]=\"selectedOptionModel\" [filter]=\"true\" [options]=\"options\" [showClear]=\"false\" filterBy=\"label\" optionLabel=\"label\" [placeholder]=\"label\">\n        <ng-template pTemplate=\"selectedItem\">\n          <div *ngIf=\"!!selectedOptionModel\">\n            <div>{{ selectedOptionModel.label }}</div>\n          </div>\n        </ng-template>\n        <ng-template let-each pTemplate=\"item\">\n          <div>\n            <div>{{ each.label }}</div>\n          </div>\n        </ng-template>\n      </p-dropdown>\n    </div>\n  </div>\n  <div class=\"save-button-container\">\n    <button (click)=\"clear()\" class=\"btn btn-white-border-gray action-button\"><i class=\"fa fa-ban btn-icon\"></i>Filter\n      l\u00F6schen\n    </button>\n    <button (click)=\"emit()\" [class.btn-disabled]=\"selectedOptions.length === 0 && selectedOption === ''\"\n            [disabled]=\"selectedOptions.length === 0 && selectedOption === ''\"\n            class=\"btn btn-white-border-gray action-button\"><i\n      class=\"fa fa-filter btn-icon\"></i>Filtern\n    </button>\n  </div>\n</mat-menu>\n", styles: [".filter-container{display:flex;flex-direction:column;padding:8px 12px}.filter-button{padding:8px 20px;margin:8px 12px 12px 8px}.filter-icon{margin-right:4px;vertical-align:middle}.menu-opened{background-color:var(--engo-green);color:var(--engo-white);border-color:var(--engo-white)}.action-button{margin:20px 12px 12px}.save-button-container{display:flex;justify-content:right;margin-right:12px;flex-wrap:wrap}/deep/ .mat-mdc-menu-panel{max-width:412px!important}/deep/ .mat-mdc-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:var(--engo-green)!important}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { options: [{
                type: Input
            }], label: [{
                type: Input
            }], multiple: [{
                type: Input
            }], filterStatusEmitter: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,