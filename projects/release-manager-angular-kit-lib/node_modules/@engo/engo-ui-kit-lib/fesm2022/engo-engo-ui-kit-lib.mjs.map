{"version":3,"file":"engo-engo-ui-kit-lib.mjs","sources":["../../../projects/engo-ui-kit-lib/src/lib/uik-form-loading/uik-form-loading.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-form-loading/uik-form-loading.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-form-loading/uik-form-loading.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-more-actions/uik-table-more-actions.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-more-actions/uik-table-more-actions.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-table-more-actions/uik-table-more-actions.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-loading/uik-table-loading.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-loading/uik-table-loading.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-table-loading/uik-table-loading.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-filter-menu/uik-table-filter-menu.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-filter-menu/uik-table-filter-menu.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-table-filter-menu/uik-table-filter-menu.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-filter-by-list-menu/uik-table-filter-by-list-menu.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-filter-by-list-menu/uik-table-filter-by-list-menu.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-table-filter-by-list-menu/uik-table-filter-by-list-menu.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-routing-loading-bar/uik-routing-loading-bar.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-routing-loading-bar/uik-routing-loading-bar.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-routing-loading-bar/uik-routing-loading-bar.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-status-label/uik-status-label.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-status-label/uik-status-label.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-status-label/uik-status-label.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-forms/uik-form-legend/uik-form-legend.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-forms/uik-form-legend/uik-form-legend.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-forms/uik-form-legend/uik-form-legend.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-forms/uik-forms/uik-forms.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-forms/uik-forms/uik-forms.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-forms/uik-forms/uik-forms.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-checkbox/uik-table-checkbox.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-checkbox/uik-table-checkbox.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-table-checkbox/uik-table-checkbox.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-editmode/uik-table-editmode.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table-editmode/uik-table-editmode.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-table-editmode/uik-table-editmode.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table/uik-table.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-table/uik-table.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-table/uik-table.module.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-confirmation-dialog/uik-confirmation-dialog.component.ts","../../../projects/engo-ui-kit-lib/src/lib/uik-confirmation-dialog/uik-confirmation-dialog.component.html","../../../projects/engo-ui-kit-lib/src/lib/uik-confirmation-dialog/uik-confirmation-dialog.module.ts","../../../projects/engo-ui-kit-lib/src/public-api.ts","../../../projects/engo-ui-kit-lib/src/engo-engo-ui-kit-lib.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'engo-uik-form-loading',\n  templateUrl: './uik-form-loading.component.html',\n  styleUrls: ['./uik-form-loading.component.css']\n})\nexport class UikFormLoadingComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"skeleton\">\n  <p-skeleton height=\"30px\" width=\"200px\"></p-skeleton>\n</div>\n<div class=\"skeleton\">\n  <p-skeleton height=\"60px\" width=\"200px\"></p-skeleton>\n</div>\n<div class=\"skeleton\">\n  <p-skeleton height=\"30px\" width=\"200px\"></p-skeleton>\n</div>\n<div class=\"skeleton\">\n  <p-skeleton height=\"30px\" width=\"200px\"></p-skeleton>\n</div>\n<div class=\"skeleton\">\n  <p-skeleton height=\"30px\" width=\"200px\"></p-skeleton>\n</div>\n\n<div class=\"button-loading-container\">\n  <div class=\"skeleton\">\n    <p-skeleton height=\"2rem\" width=\"100px\"></p-skeleton>\n  </div>\n  <div class=\"skeleton\">\n    <p-skeleton height=\"2rem\" width=\"100px\"></p-skeleton>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikFormLoadingComponent } from './uik-form-loading.component';\nimport { SkeletonModule } from \"primeng/skeleton\";\n\n\n@NgModule({\n  declarations: [\n    UikFormLoadingComponent\n  ],\n  imports: [\n    CommonModule,\n    SkeletonModule\n  ],\n  exports: [\n    UikFormLoadingComponent\n  ]\n})\nexport class UikFormLoadingModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ITableMoreAction } from \"./interfaces/TableMoreActions.interface\";\n\n@Component({\n  selector: 'engo-uik-table-more-actions',\n  templateUrl: './uik-table-more-actions.component.html',\n  styleUrls: ['./uik-table-more-actions.component.css']\n})\nexport class UikTableMoreActions implements OnInit {\n  @Input() faIcon = \"fa-solid fa-ellipsis\";\n  @Input() label = \"Weitere Aktionen\";\n  @Input() iconStyle = '';\n  @Input() actions: ITableMoreAction[] = [];\n  @Output() actionEmitter = new EventEmitter<ITableMoreAction>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  isDisabled(index: number): boolean {\n    return this.actions[index].disabled;\n  }\n\n  emitActionClick(action: ITableMoreAction) {\n    this.actionEmitter.emit(action);\n  }\n}\n","<button #moreActionsTrigger=\"matMenuTrigger\" [class.menu-opened]=\"moreActionsTrigger.menuOpen\"\n        [matMenuTriggerFor]=\"moreActions\"\n        class=\"btn btn-white-border-gray more-actions-button\"><i [ngClass]=\"faIcon\" [style]=\"iconStyle\"\n                                                                 class=\"action-icon\"></i>{{label}}\n</button>\n<mat-menu #moreActions>\n  <div *ngFor=\"let action of actions; index as index\" class=\"more-actions-option\">\n    <button (click)=\"emitActionClick(action)\" [disabled]=\"isDisabled(index)\" mat-menu-item><i\n      [class]=\"action.iconClass + ' btn-icon'\"></i>{{action.description}}\n    </button>\n  </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikTableMoreActions } from './uik-table-more-actions.component';\nimport { MatMenuModule } from \"@angular/material/menu\";\n\n\n@NgModule({\n  declarations: [\n    UikTableMoreActions\n  ],\n  exports: [\n    UikTableMoreActions\n  ],\n  imports: [\n    CommonModule,\n    MatMenuModule\n  ]\n})\nexport class UikTableMoreActionsModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'engo-uik-table-loading',\n  templateUrl: './uik-table-loading.component.html',\n  styleUrls: ['./uik-table-loading.component.css']\n})\nexport class UikTableLoadingComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p-skeleton height=\"250px\" width=\"100%\"></p-skeleton>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikTableLoadingComponent } from './uik-table-loading.component';\nimport { SkeletonModule } from \"primeng/skeleton\";\n\n\n@NgModule({\n  declarations: [\n    UikTableLoadingComponent\n  ],\n  imports: [\n    CommonModule,\n    SkeletonModule\n  ],\n  exports: [\n    UikTableLoadingComponent\n  ]\n})\nexport class UikTableLoadingModule {\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ITableFilterMenuItem } from \"./interfaces/TableFilterMenuItem.interface\";\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\n\n@Component({\n  selector: 'engo-uik-table-filter-menu',\n  templateUrl: './uik-table-filter-menu.component.html',\n  styleUrls: ['./uik-table-filter-menu.component.css']\n})\nexport class UikTableFilterMenuComponent {\n  @Input() label = \"Filter\";\n  @Input() filters: ITableFilterMenuItem[] = [];\n  @Output() filterStatusEmitter = new EventEmitter<ITableFilterMenuItem>();\n\n  constructor() {\n  }\n\n  get filterActiveCount() {\n    return this.filters.filter((f) => f.active === true).length;\n  }\n\n  toggleFilter($event: MatSlideToggleChange, index: number) {\n    this.filters[index].active = $event.checked;\n    this.filterStatusEmitter.emit(this.filters[index]);\n  }\n\n  getCount(index: number) {\n    return this.filters[index].count!;\n  }\n}\n","<button #filtertrigger=\"matMenuTrigger\" [class.menu-opened]=\"filtertrigger.menuOpen\"\n        [matBadge]=\"filterActiveCount !== 0 ? filterActiveCount : undefined\" [matMenuTriggerFor]=\"feedFilter\"\n        class=\"btn btn-white-border-gray filter-button\">\n  <i class=\"fa-solid fa-filter filter-icon\"></i><span\n  style=\"text-overflow: ellipsis; overflow: hidden;\">{{label}}</span>\n</button>\n<mat-menu #feedFilter>\n  <div (click)=\"$event.stopPropagation()\" *ngFor=\"let filter of filters; index as index\" class=\"filter-container\">\n    <mat-slide-toggle (change)=\"toggleFilter($event, index)\" [checked]=\"filter.active\">\n      <span>{{filter.description}} {{getCount(index) && getCount(index) > 0 ? '(' + getCount(index) + ')' : ''}}</span>\n    </mat-slide-toggle>\n  </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikTableFilterMenuComponent } from \"./uik-table-filter-menu.component\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatBadgeModule } from \"@angular/material/badge\";\n\n\n@NgModule({\n  declarations: [\n    UikTableFilterMenuComponent\n  ],\n  exports: [\n    UikTableFilterMenuComponent\n  ],\n  imports: [\n    CommonModule,\n    MatSlideToggleModule,\n    MatBadgeModule,\n    MatMenuModule\n  ]\n})\nexport class UikTableFilterMenuModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { cloneDeep as _cloneDeep } from \"lodash\";\n\n@Component({\n\tselector: 'engo-uik-table-filter-by-list-menu',\n\ttemplateUrl: './uik-table-filter-by-list-menu.component.html',\n\tstyleUrls: ['./uik-table-filter-by-list-menu.component.css']\n})\nexport class UikTableFilterByListMenuComponent implements OnInit {\n\tselectedOptions: string[] = [];\n\tselectedOptionModel: { id: string, label: string } = {id: '', label: ''};\n\tselectedOptionsModel: { id: string, label: string }[] = [];\n\tselectedOption = '';\n\tfilteredOptions: string[] = [];\n\tfilteredOption = '';\n\t@Input() options: { id: string, label: string }[] = [];\n\t@Input() label = 'Filtern';\n\t@Input() multiple = true;\n\t@Output() filterStatusEmitter = new EventEmitter<string[] | string>();\n\n\tconstructor() {\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\temit() {\n\t\tthis.filteredOption = _cloneDeep(this.selectedOption);\n\t\tthis.filteredOptions = _cloneDeep(this.selectedOptions);\n\t\tthis.filterStatusEmitter.emit(this.multiple ? this.selectedOptions : this.selectedOption);\n\t}\n\n\tclear() {\n\t\tthis.selectedOptions = [];\n\t\tthis.selectedOption = '';\n\t\tthis.selectedOptionsModel = [];\n\t\tthis.selectedOptionModel = {id: '', label: ''};\n\t\tthis.filteredOption = '';\n\t\tthis.filteredOptions = [];\n\t\tthis.filterStatusEmitter.emit(this.selectedOptions);\n\t}\n\n\tonSelectChange($event: any) {\n\t\tif (!!$event.value) {\n\t\t\tif (this.multiple) {\n\t\t\t\tthis.selectedOptions = $event.value.map((v: { id: any; }) => v.id);\n\t\t\t} else {\n\t\t\t\tthis.selectedOption = $event.value.id;\n\t\t\t}\n\t\t}\n\t}\n}\n","<button #filtertrigger=\"matMenuTrigger\" [class.menu-opened]=\"filtertrigger.menuOpen\"\n        [matBadge]=\"!multiple && filteredOption !== '' ? 1 : filteredOptions.length === 0 ? undefined : filteredOptions.length\"\n        [matMenuTriggerFor]=\"filterMenu\"\n        class=\"btn btn-white-border-gray filter-button\">\n  <i class=\"fa-solid fa-filter filter-icon\"></i>{{label}}\n</button>\n<mat-menu #filterMenu>\n  <div (click)=\"$event.stopPropagation(); $event.preventDefault\" class=\"filter-container\">\n    <div class=\"multiple-filter\" *ngIf=\"multiple\">\n      <p-multiSelect [options]=\"options\" appendTo=\"body\" (onChange)=\"onSelectChange($event)\" [placeholder]=\"label\" [filter]=\"true\" filterBy=\"label\" [showClear]=\"false\" [(ngModel)]=\"selectedOptionsModel\" [defaultLabel]=\"label\" optionLabel=\"label\"\n                     class=\"multiselect-custom\">\n        <ng-template let-value pTemplate=\"selectedItems\">\n          <div class=\"country-item country-item-value\" *ngFor=\"let option of selectedOptionsModel\">\n            <div>{{option.label}}</div>\n          </div>\n          <div *ngIf=\"!selectedOptionsModel || selectedOptionsModel.length === 0\" class=\"country-placeholder\">\n            {{label}}\n          </div>\n        </ng-template>\n        <ng-template let-each pTemplate=\"item\">\n          <div class=\"country-item\">\n            <div>{{each.label}}</div>\n          </div>\n        </ng-template>\n      </p-multiSelect>\n    </div>\n    <div class=\"single-filter\" *ngIf=\"!multiple\">\n      <p-dropdown (onChange)=\"onSelectChange($event)\" appendTo=\"body\" [(ngModel)]=\"selectedOptionModel\" [filter]=\"true\" [options]=\"options\" [showClear]=\"false\" filterBy=\"label\" optionLabel=\"label\" [placeholder]=\"label\">\n        <ng-template pTemplate=\"selectedItem\">\n          <div *ngIf=\"!!selectedOptionModel\">\n            <div>{{ selectedOptionModel.label }}</div>\n          </div>\n        </ng-template>\n        <ng-template let-each pTemplate=\"item\">\n          <div>\n            <div>{{ each.label }}</div>\n          </div>\n        </ng-template>\n      </p-dropdown>\n    </div>\n  </div>\n  <div class=\"save-button-container\">\n    <button (click)=\"clear()\" class=\"btn btn-white-border-gray action-button\"><i class=\"fa fa-ban btn-icon\"></i>Filter\n      löschen\n    </button>\n    <button (click)=\"emit()\" [class.btn-disabled]=\"selectedOptions.length === 0 && selectedOption === ''\"\n            [disabled]=\"selectedOptions.length === 0 && selectedOption === ''\"\n            class=\"btn btn-white-border-gray action-button\"><i\n      class=\"fa fa-filter btn-icon\"></i>Filtern\n    </button>\n  </div>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikTableFilterByListMenuComponent } from './uik-table-filter-by-list-menu.component';\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatBadgeModule } from \"@angular/material/badge\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\n\n\n@NgModule({\n  declarations: [\n    UikTableFilterByListMenuComponent\n  ],\n  exports: [\n    UikTableFilterByListMenuComponent\n  ],\n\timports: [\n\t\tCommonModule,\n\t\tMatMenuModule,\n\t\tMatSelectModule,\n\t\tMatBadgeModule,\n\t\tDropdownModule,\n\t\tFormsModule,\n\t\tMultiSelectModule\n\t]\n})\nexport class UikTableFilterByListMenuModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\n\n@Component({\n  selector: 'engo-uik-routing-loading-bar',\n  templateUrl: './uik-routing-loading-bar.component.html',\n  styleUrls: ['./uik-routing-loading-bar.component.css']\n})\nexport class UikRoutingLoadingBarComponent implements OnInit {\n  loading = false;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.router.events.subscribe((event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd: {\n          this.loading = false;\n          break;\n        }\n        case event instanceof NavigationCancel: {\n          this.loading = false;\n          break;\n        }\n      }\n    });\n  }\n\n}\n","<mat-progress-bar *ngIf=\"loading\" [mode]=\"'indeterminate'\"></mat-progress-bar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikRoutingLoadingBarComponent } from './uik-routing-loading-bar.component';\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\n\n\n@NgModule({\n  declarations: [\n    UikRoutingLoadingBarComponent\n  ],\n  exports: [\n    UikRoutingLoadingBarComponent\n  ],\n  imports: [\n    CommonModule,\n    MatProgressBarModule\n  ]\n})\nexport class UikRoutingLoadingBarModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IStatusLabel } from \"./interfaces/uik-status-label.interface\";\n\n@Component({\n  selector: 'engo-uik-status-label',\n  templateUrl: './uik-status-label.component.html',\n  styleUrls: ['./uik-status-label.component.css']\n})\nexport class UikStatusLabelComponent implements OnInit {\n  @Input() labelData: IStatusLabel | undefined;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<label class=\"status-label\">{{labelData?.prelabel}} <span [ngClass]=\"'label-' + labelData?.labelColor\"\n                                                          class=\"label\">{{labelData?.labelValue}}</span></label>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikStatusLabelComponent } from './uik-status-label.component';\n\n\n@NgModule({\n  declarations: [\n    UikStatusLabelComponent\n  ],\n  exports: [\n    UikStatusLabelComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class UikStatusLabelModule {}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'engo-uik-form-legend',\n  templateUrl: './uik-form-legend.component.html',\n  styleUrls: ['./uik-form-legend.component.css']\n})\nexport class UikFormLegendComponent implements OnInit {\n  @Input() legendElements: string[] = ['* Pflichtfeld'];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"legend\">\n  <ng-container *ngFor=\"let legendElement of legendElements\">\n    <p>{{legendElement}}</p>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikFormLegendComponent } from './uik-form-legend.component';\n\n\n@NgModule({\n  declarations: [\n    UikFormLegendComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    UikFormLegendComponent\n  ]\n})\nexport class UikFormLegendModule {}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IFormFieldInput, IFormFields } from '../interfaces/uik-forms.interface';\nimport { NgForm } from '@angular/forms';\nimport { MatSelectChange } from '@angular/material/select';\nimport * as _ from 'lodash';\n\nexport interface IValidationResult {\n  value: string;\n  valid: boolean;\n  errorMessage: string[];\n}\n\n@Component({\n  selector: 'engo-uik-forms',\n  templateUrl: './uik-forms.component.html',\n  styleUrls: ['./uik-forms.component.css']\n})\nexport class UikFormsComponent implements OnInit, AfterViewInit {\n  @Input() formStructure: IFormFields[] = [];\n  @Output() submitData: EventEmitter<any> = new EventEmitter<any>();\n  @Output() inputLiveData: EventEmitter<any> = new EventEmitter<any>();\n  @Output() selectValue: EventEmitter<any> = new EventEmitter<any>();\n  @Output() selectSearchValue: EventEmitter<any> = new EventEmitter<any>();\n  @Output() validationResult: EventEmitter<IValidationResult[]> = new EventEmitter<IValidationResult[]>();\n\n  public changes = 0;\n  public checkboxValue = false;\n  public inputNgModel: any[] = [];\n  public validationResults: IValidationResult[] = [];\n  public selectSearchNgModelObject: Array<string> | Array<null> = [];\n  private previousFormData: any | undefined;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.formStructure.forEach((element, index) => {\n      if (element.inputContent && element.inputContent.inputValueDefault) {\n        this.inputNgModel[index] = element.inputContent.inputValueDefault;\n      }\n      if (element.selectSearchContent) {\n        this.selectSearchNgModelObject[element.selectSearchContent.selectIndex] = null;\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.formStructure.forEach((element, index) => {\n      if (element.inputContent) {\n        if (element.inputContent.inputValueDefault) {\n          const htmlElement = (document.getElementById('inp-' + index) as HTMLInputElement);\n          if (htmlElement && !_.isEmpty(htmlElement.value)) {\n            htmlElement.value = element.inputContent.inputValueDefault;\n          }\n        }\n      }\n    });\n  }\n\n  onSubmit(form: NgForm): void {\n    this.checkValidation();\n    if (this.changes !== 0) {\n      this.changes = 0;\n      this.previousFormData = form.value;\n      this.submitData.emit(form);\n    }\n  }\n\n  onChange(form: NgForm): void {\n    this.checkValidation();\n    this.inputLiveData?.emit(form);\n  }\n\n  getSelectedValue(select: MatSelectChange): void {\n    this.selectValue.emit(select.value);\n  }\n\n  getSelectSearchValue(index: number): void {\n    this.changes++;\n    this.selectSearchValue.emit({\n      index,\n      value: this.selectSearchNgModelObject[index]\n    });\n  }\n\n  checkboxChangeEmit(event: any): void {\n    this.checkboxValue = event.checked;\n  }\n\n  checkValidation(): IValidationResult[] {\n    const results: IValidationResult[] = [];\n\n    this.formStructure.forEach((field, index) => {\n      if (field.type === 'input' && field.inputContent) {\n        const currentInput = this.inputNgModel[index];\n        const result: IValidationResult = {\n          valid: true,\n          value: String(currentInput),\n          errorMessage: []\n        };\n\n        if (field.inputContent.inputNgModelRequired && _.isEmpty(currentInput)) {\n          result.valid = false;\n          if (field.inputContent.inputAlerting?.alertErrorTextRequired) {\n            result.errorMessage.push(field.inputContent.inputAlerting?.alertErrorTextRequired);\n          } else {\n            result.errorMessage.push('Das Feld ist ein Pflichtfeld.');\n          }\n        }\n\n        if (field.inputContent.inputNgModelMinLength && currentInput.length < field.inputContent.inputNgModelMinLength) {\n          result.valid = false;\n          if (field.inputContent.inputAlerting?.alertErrorTextLength) {\n            result.errorMessage.push(field.inputContent.inputAlerting?.alertErrorTextLength);\n          } else {\n            result.errorMessage?.push('Der Wert entspricht nicht der Länge von mindestens ' + field.inputContent.inputNgModelMinLength + ' und maximal ' + field.inputContent.inputNgModelMaxLength + ' Zeichen.');\n          }\n        }\n\n        if (field.inputContent.inputNgModelMaxLength && currentInput.length > field.inputContent.inputNgModelMaxLength) {\n          result.valid = false;\n          if (field.inputContent.inputAlerting?.alertErrorTextLength) {\n            result.errorMessage.push(field.inputContent.inputAlerting?.alertErrorTextLength);\n          } else {\n            result.errorMessage?.push('Der Wert entspricht nicht der Länge von mindestens ' + field.inputContent.inputNgModelMinLength + ' und maximal ' + field.inputContent.inputNgModelMaxLength + ' Zeichen.');\n          }\n        }\n\n        if (field.inputContent.inputValidationPattern && !new RegExp(field.inputContent.inputValidationPattern).test(currentInput)) {\n          result.valid = false;\n          if (field.inputContent.inputAlerting?.alertErrorTextPattern) {\n            result.errorMessage.push(field.inputContent.inputAlerting?.alertErrorTextPattern);\n          } else {\n            result.errorMessage.push('Der Wert entspricht nicht der geforderten Struktur.');\n          }\n        }\n\n        results[index] = result;\n      }\n    });\n\n    this.validationResults = results;\n    this.validationResult.emit(this.validationResults);\n    return results;\n  }\n\n  hasChanged(formfield: IFormFieldInput, current: any): void {\n    if (formfield.inputName) {\n      const previous = this.previousFormData ? this.previousFormData[formfield.inputName] : null;\n      if (previous !== current) {\n        this.changes++;\n      } else {\n        this.changes = 0;\n      }\n    }\n  }\n\n}\n","<form #form=\"ngForm\" (change)=\"onChange(form)\" (ngSubmit)=\"onSubmit(form)\" class=\"form\" ngNativeValidate>\n\n  <ng-container *ngFor=\"let element of formStructure; let i = index\">\n    <div *ngIf=\"element.type === 'select' && element.selectContent\" [id]=\"'form-field-select'\">\n      <div class=\"formelement\">\n        <mat-form-field appearance=\"fill\" class=\"selectbox\">\n          <mat-label>{{element.selectContent.selectLabel}}</mat-label>\n          <mat-select (selectionChange)=\"getSelectedValue($event); changes = changes + 1\">\n            <mat-option *ngFor=\"let selectElement of element.selectContent.selectOptionItems\"\n                        [value]=\"selectElement.selectOptionValue\"> {{selectElement.selectOptionLabel}} </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div *ngIf=\"element.type === 'select-search' && element.selectSearchContent\" [class]=\"'select-search'\"\n         [id]=\"'form-field-select-search'\">\n      <label class=\"select-search-label\">{{element.selectSearchContent.label}}</label>\n      <ng-select (change)=\"getSelectSearchValue(element.selectSearchContent.selectIndex)\"\n                 [(ngModel)]=\"selectSearchNgModelObject[element.selectSearchContent.selectIndex]\"\n                 [bindLabel]=\"element.selectSearchContent.bindLabel\"\n                 [bindValue]=\"element.selectSearchContent.bindValue\"\n                 [items]=\"element.selectSearchContent.items | async\"\n                 [multiple]=\"element.selectSearchContent.multiple\"\n                 [placeholder]=\"element.selectSearchContent.placeholder\">\n      </ng-select>\n    </div>\n    <div *ngIf=\"element.type === 'input' && element.inputContent\" [class]=\"'form-field-input'\">\n      <div *ngIf=\"element.inputContent.inputNgModelRequired === false\"\n           [class]=\"'form-field form-field-input form-field-input-novalidation'\">\n        <label [for]=\"'inp-novalidation-' + i\" class=\"inp\">\n          <input (ngModelChange)=\"hasChanged(element.inputContent, $event)\"\n                 [(ngModel)]=\"inputNgModel[i]\"\n                 [class]=\"'inp'\"\n                 [disabled]=\"element.inputContent.inputDisabled ? element.inputContent.inputDisabled : false\"\n                 [id]=\"'inp-novalidation-' + i\"\n                 [name]=\"element.inputContent.inputName\"\n                 [pattern]=\"!!element.inputContent.inputValidationPattern ? element.inputContent.inputValidationPattern : '.*'\"\n                 [type]=\"element.inputContent.inputType\"\n                 [value]=\"element.inputContent.inputValueDefault\"\n                 ngModel\n                 placeholder=\"&nbsp;\">\n          <span class=\"label\">{{element.inputContent.inputLabel}}</span>\n          <span class=\"focus-bg\"></span>\n        </label>\n      </div>\n      <div *ngIf=\"element.inputContent.inputNgModelRequired === true\"\n           [class]=\"'form-field form-field-input form-field-input-validation'\">\n        <label [for]=\"'inp-' + i\" class=\"inp\">\n          <input (ngModelChange)=\"hasChanged(element.inputContent, $event); checkValidation()\"\n                 [(ngModel)]=\"inputNgModel[i]\"\n                 [class]=\"'inp'\"\n                 [disabled]=\"element.inputContent.inputDisabled ? element.inputContent.inputDisabled : false\"\n                 [id]=\"'inp-' + i\"\n                 [maxlength]=\"element.inputContent.inputNgModelMaxLength ? element.inputContent.inputNgModelMaxLength : ''\"\n                 [minlength]=\"element.inputContent.inputNgModelMinLength ? element.inputContent.inputNgModelMinLength : ''\"\n                 [name]=\"element.inputContent.inputName\"\n                 [pattern]=\"!!element.inputContent.inputValidationPattern ? element.inputContent.inputValidationPattern : '.*'\" [type]=\"element.inputContent.inputType\"\n                 [value]=\"element.inputContent.inputValueDefault\"\n                 ngModel\n                 placeholder=\"&nbsp;\"\n                 required>\n          <span class=\"label\">{{element.inputContent.inputLabel}}</span>\n          <span class=\"focus-bg\"></span>\n        </label>\n        <div *ngIf=\"!!validationResults[i]\">\n          <div *ngIf=\"validationResults[i].errorMessage.length > 0\">\n            <p *ngFor=\"let error of validationResults[i].errorMessage\" class=\"alert\">{{error}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"element.type === 'checkbox' && element.checkboxContent\" [class]=\"'form-field form-field-checkbox'\">\n      <input (change)=\"checkboxChangeEmit($event); changes = changes + 1\"\n             [checked]=\"element.checkboxContent.checkboxCheckedState\"\n             [id]=\"element.checkboxContent.checkboxId ? element.checkboxContent.checkboxId : element.checkboxContent.checkboxName\" [name]=\"element.checkboxContent.checkboxName\" class=\"inp-cbx\"\n             ngModel\n             style=\"display: none\" type=\"checkbox\"><label [for]=\"element.checkboxContent.checkboxName\"\n                                                                                         class=\"cbx\"><span\n      id=\"span-cbx-checkbox\"><svg height=\"10px\" viewbox=\"0 0 12 10\" width=\"12px\">\n                <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\n            </svg></span><span class=\"label\"\n                               id=\"span-cbx-label\">{{element.checkboxContent.checkboxLabel}}</span></label>\n\n    </div>\n\n    <div *ngIf=\"element.type === 'submit' && element.submitContent\" [class]=\"'form-field form-field-submit'\">\n      <button [class]=\"element.submitContent.submitDisabled || !form.valid || changes === 0 ? 'btn btn-disabled' : 'btn btn-submit'\"\n              [disabled]=\"!(element.submitContent) || element.submitContent.submitDisabled || !form.valid || changes === 0\"\n              type=\"submit\"\n              value=\"Send\"><i\n        [class]=\"!(element.submitContent) || element.submitContent.submitIconFaClass ? element.submitContent.submitIconFaClass : 'fa fa-cog'\"\n        class=\"btn-icon\"></i>{{element.submitContent.submitLabel}}</button>\n    </div>\n\n    <div *ngIf=\"element.type === 'header' && element.headerContent\" class=\"form-field form-field-header\">\n      <h1 *ngIf=\"element.headerContent.headerFormat === 'h1'\">{{element.headerContent.headerTitle}}</h1>\n      <h2 *ngIf=\"element.headerContent.headerFormat === 'h2'\">{{element.headerContent.headerTitle}}</h2>\n      <h3 *ngIf=\"element.headerContent.headerFormat === 'h3'\">{{element.headerContent.headerTitle}}</h3>\n    </div>\n  </ng-container>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikFormsComponent } from './uik-forms.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\n@NgModule({\n  declarations: [\n    UikFormsComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    NgSelectModule\n  ],\n  exports: [\n    UikFormsComponent\n  ]\n})\nexport class UikFormsModule {}\n","import {\n  AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { IColumns } from '../uik-table/interfaces/uik-table.interface';\nimport { ICheckboxTableClicked } from './interfaces/uik-table-checkbox.interface';\n\n@Component({\n  selector: 'engo-uik-table-checkbox',\n  templateUrl: './uik-table-checkbox.component.html',\n  styleUrls: ['./uik-table-checkbox.component.css']\n})\nexport class UikTableCheckboxComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() columns: IColumns[] | undefined = undefined;\n  @Input() statusHeaderLabel?: string;\n  @Input() showStatusLabel = true;\n  @Input() dataSource: MatTableDataSource<any> = new MatTableDataSource();\n  @Input() enablePagination = false;\n  @Input() paginatorPageOptions?: Array<number>;\n  @Input() enableSort = false;\n  @Input() enableFiltering = false;\n  @Input() enableMultipleChecked = true;\n\n  @Output() checkboxClickedMultipleEmitter: EventEmitter<ICheckboxTableClicked[]> = new EventEmitter<ICheckboxTableClicked[]>();\n  @Output() checkboxClickedSingleEmitter: EventEmitter<ICheckboxTableClicked> = new EventEmitter<ICheckboxTableClicked>();\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator | null;\n\n  @ViewChild(MatSort) sort!: MatSort;\n\n  @ViewChild(MatTable)\n  table!: MatTable<any>;\n\n  displayedColumns: string[] = [];\n  checkboxClickedMultipleArray: ICheckboxTableClicked[] = [];\n  checkboxClickedSingleArray: ICheckboxTableClicked | undefined = undefined;\n  public pageIndex = 0;\n  public pageSize = 0;\n  public correctIndex = 0;\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.renderDisplayedColumns();\n  }\n\n  ngAfterViewInit(): void {\n    this.renderSorting();\n    this.renderPagination();\n    this.renderStatusLabel();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.table) {\n      if (changes[\"dataSource\"]) {\n        this.table.dataSource = this.dataSource;\n      }\n      this.table.renderRows();\n      this.renderSorting();\n      this.renderPagination();\n      this.renderStatusLabel();\n    }\n  }\n\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n    if (this.enableMultipleChecked === false) {\n      this.checkboxClickedSingleArray = {elementId: -1};\n      this.emitCheckboxClickedSingle();\n    }\n    if (this.enableMultipleChecked === true) {\n      this.checkboxClickedMultipleArray = [];\n      this.emitCheckboxClickedMultiple();\n    }\n  }\n\n  public getSelectedRow(event: MatCheckboxChange, index: number): void {\n    if (this.paginator && this.enablePagination === true) {\n      this.pageIndex = this.paginator.pageIndex;\n      this.pageSize = this.paginator.pageSize;\n      this.correctIndex = this.pageIndex * this.pageSize;\n      index = index + this.correctIndex;\n    }\n\n    const elementId = this.dataSource.filteredData[index].id;\n\n    if (event.checked === true) {\n      if (this.enableMultipleChecked === false) {\n        this.checkboxClickedSingleArray = {elementId};\n        this.emitCheckboxClickedSingle();\n      }\n      if (this.enableMultipleChecked === true) {\n        this.checkboxClickedMultipleArray.push({elementId});\n        this.emitCheckboxClickedMultiple();\n      }\n    }\n    if (event.checked === false) {\n      if (this.enableMultipleChecked === false) {\n        this.checkboxClickedSingleArray = {elementId: -1};\n        this.emitCheckboxClickedSingle();\n      }\n      if (this.enableMultipleChecked === true) {\n        const arrayIndex = this.checkboxClickedMultipleArray.findIndex(e => e.elementId === elementId);\n        this.checkboxClickedMultipleArray.splice(arrayIndex, 1);\n        this.emitCheckboxClickedMultiple();\n      }\n    }\n  }\n\n  public onChangePagination(): void {\n    if (this.enableMultipleChecked === false) {\n      this.checkboxClickedSingleArray = {elementId: -1};\n      this.emitCheckboxClickedSingle();\n    }\n    if (this.enableMultipleChecked === true) {\n      this.checkboxClickedMultipleArray = [];\n      this.emitCheckboxClickedMultiple();\n    }\n  }\n\n  public checkSelectedMultipleInArray(id: number | string): number {\n    return this.checkboxClickedMultipleArray.findIndex(element => element.elementId === id);\n  }\n\n  public emitCheckboxClickedMultiple(): void {\n    this.checkboxClickedMultipleEmitter.emit(this.checkboxClickedMultipleArray);\n  }\n\n  public emitCheckboxClickedSingle(): void {\n    this.checkboxClickedSingleEmitter.emit(this.checkboxClickedSingleArray);\n  }\n\n  private renderDisplayedColumns(): void {\n    if (this.columns) {\n      this.displayedColumns.push('checkboxColumn');\n      for (const column of this.columns) {\n        this.displayedColumns.push(column.name);\n      }\n    }\n  }\n\n  private renderStatusLabel(): void {\n    if (this.showStatusLabel) {\n      if (!this.displayedColumns.includes('statusLabelColumn')) {\n        this.displayedColumns.push('statusLabelColumn');\n      }\n      this.dataSource.data.forEach(element => element.statusLabelColumn = element.statusLabel.labelValue);\n    }\n  }\n\n  private renderSorting(): void {\n    if (this.enableSort) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  private renderPagination(): void {\n    if (this.enablePagination) {\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n}\n","<div *ngIf=\"enableFiltering === true\" class=\"form\">\n  <label class=\"inp\" for=\"inp\">\n    <input (keyup)=\"applyFilter($event)\" id=\"inp-search-filter\" placeholder=\" \" type=\"text\">\n    <span class=\"label\">Suchen & Filtern</span>\n    <span class=\"focus-bg\"></span>\n  </label>\n</div>\n<table #table [dataSource]=\"dataSource\" class=\"inventar-table mat-elevation-z8\" mat-table matSort>\n  <ng-container matColumnDef=\"checkboxColumn\">\n    <th *matHeaderCellDef mat-header-cell></th>\n    <td *matCellDef=\"let element; index as i;\" mat-cell>\n      <mat-checkbox (change)=\"getSelectedRow($event, i)\" *ngIf=\"enableMultipleChecked === true\"\n                    [checked]=\"checkSelectedMultipleInArray(element.id) !== -1\">\n      </mat-checkbox>\n      <mat-checkbox (change)=\"getSelectedRow($event, i)\"\n                    *ngIf=\"enableMultipleChecked === false\"\n                    [checked]=\"checkboxClickedSingleArray?.elementId === element.id\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n  <div *ngIf=\"enableSort\">\n    <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n      <th *matHeaderCellDef mat-header-cell mat-sort-header> {{column.displayName}} </th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <span *ngIf=\"!!column.backendPath\"\n              [style]=\"column.style\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n        <span *ngIf=\"column.backendPath === undefined\" [style]=\"column.style\">{{element[column.backendName]}}</span>\n      </td>\n    </ng-container>\n    <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n      <th *matHeaderCellDef mat-header-cell mat-sort-header>{{statusHeaderLabel}}</th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n      </td>\n    </ng-container>\n\n  </div>\n\n  <div *ngIf=\"!enableSort\">\n    <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n      <th *matHeaderCellDef mat-header-cell> {{column.displayName}} </th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <span *ngIf=\"!!column.backendPath\"\n              [style]=\"column.style\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n        <span *ngIf=\"column.backendPath === undefined\" [style]=\"column.style\">{{element[column.backendName]}}</span>\n      </td>\n\n      <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>{{statusHeaderLabel}}</th>\n        <td *matCellDef=\"let element; index as i\" mat-cell>\n          <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n        </td>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n  <tr *matRowDef=\"let userdata; columns: displayedColumns;\" mat-row></tr>\n</table>\n<mat-paginator (page)=\"onChangePagination()\"\n               *ngIf=\"enablePagination\"\n               [pageSizeOptions]=\"paginatorPageOptions && paginatorPageOptions.length > 0 ? paginatorPageOptions : [10, 25, 50, 100, 200]\" showFirstLastButtons></mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikTableCheckboxComponent } from './uik-table-checkbox.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { UikStatusLabelModule } from \"../uik-status-label/uik-status-label.module\";\n\n\n@NgModule({\n  declarations: [\n    UikTableCheckboxComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    UikStatusLabelModule\n  ],\n  exports: [\n    UikTableCheckboxComponent\n  ]\n})\nexport class UikTableCheckboxModule {}\n","import {\n  AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { IColumnsEdit } from './interfaces/uikEditTable.interface';\n\n@Component({\n  selector: 'engo-uik-table-editmode',\n  templateUrl: './uik-table-editmode.component.html',\n  styleUrls: ['./uik-table-editmode.component.css']\n})\nexport class UikTableEditmodeComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() columns: IColumnsEdit[] | undefined = undefined;\n  @Input() statusHeaderLabel?: string;\n  @Input() showStatusLabel = false;\n  @Input() dataSource: MatTableDataSource<any> = new MatTableDataSource();\n  @Input() enablePagination = false;\n  @Input() enableSort = false;\n  @Input() hasPermissionWrite?: boolean;\n  @Input() idColumnName = '';\n  @Input() enableFiltering = false;\n\n  @Output() saveEntryData: EventEmitter<any> = new EventEmitter<any>();\n  @Output() deleteEntryRowid: EventEmitter<any> = new EventEmitter<any>();\n  @Output() editRowId: EventEmitter<any> = new EventEmitter<any>();\n  @Output() callAction: EventEmitter<any> = new EventEmitter<any>();\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator | null;\n\n  @ViewChild(MatSort) sort!: MatSort;\n\n  @ViewChild(MatTable)\n  table!: MatTable<any>;\n\n  public displayedColumns: string[] = [];\n  public editMode = false;\n  public editModeIndex: number | null = null;\n\n  public pageIndex = 0;\n  public pageSize = 0;\n  public correctIndex = 0;\n\n  public newData: any;\n  public change = 0;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.renderDisplayedColumns();\n    this.table.renderRows();\n    this.renderSorting();\n    this.renderPagination();\n    this.renderStatusLabel();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.table) {\n      if (changes[\"dataSource\"]) {\n        this.table.dataSource = this.dataSource;\n      }\n      this.table.renderRows();\n      this.renderSorting();\n      this.renderPagination();\n      this.renderStatusLabel();\n    }\n  }\n\n  async enableEditMode(index: number): Promise<void> {\n    if (this.hasPermissionWrite) {\n      this.editMode = true;\n      if (this.paginator && this.enablePagination) {\n        this.pageIndex = this.paginator.pageIndex;\n        this.pageSize = this.paginator.pageSize;\n        this.correctIndex = this.pageIndex * this.pageSize;\n        index = index + this.correctIndex;\n      }\n      const elementId = this.dataSource.filteredData[+index].id;\n      if (this.enableFiltering && !!this.dataSource.filter) {\n        const indexOfFiltered = this.dataSource.data.findIndex((e) => e.id === elementId);\n        if (indexOfFiltered) {\n          index = indexOfFiltered;\n        }\n      }\n      this.editModeIndex = index;\n      this.newData = this.dataSource.filteredData[index];\n    }\n  }\n\n  public changeInputValue(backendName: string, index: number, backendPath?: string): void {\n    if (backendPath) {\n      this.newData[backendPath][backendName] = ((\n        document.getElementById(backendName + index)\n      ) as HTMLInputElement).value;\n      this.change++;\n    } else {\n      this.newData[backendName] = ((\n        document.getElementById(backendName + index)\n      ) as HTMLInputElement).value;\n      this.change++;\n    }\n  }\n\n  public emitSaveEntry(): void {\n    if (this.hasPermissionWrite) {\n      this.saveEntryData.emit(this.newData);\n      this.editRowId.emit(this.editModeIndex);\n      this.callAction.emit('save');\n      this.editMode = false;\n      this.change = 0;\n    }\n  }\n\n  public deleteEntry(index: number): void {\n    this.deleteEntryRowid.emit(this.getRowid(index));\n    this.callAction.emit('delete');\n    this.editMode = false;\n    this.change = 0;\n  }\n\n  public cancel(): void {\n    this.editMode = false;\n    window.location.reload();\n  }\n\n  public onChangePagination(event: any): void {\n    this.editMode = false;\n  }\n\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n\n    this.editMode = false;\n    this.editModeIndex = null;\n  }\n\n  public getRowid(index: number): string {\n    let newDataRowId = !!this.dataSource.data[index].rowid ? this.dataSource.data[index].rowid : this.dataSource.data[index].id;\n    const backendPathId = this.columns?.find((column) => column.name === this.idColumnName && column.backendPath);\n    if (backendPathId && backendPathId.backendPath) {\n      // @ts-ignore\n      // tslint:disable-next-line:max-line-length\n      newDataRowId = this.dataSource.data[index][backendPathId.backendPath][backendPathId.backendName] || this.dataSource.data[index][backendPathId.backendPath].id || this.dataSource.data[index][backendPathId.backendPath].rowid;\n    }\n    return newDataRowId;\n  }\n\n  private renderDisplayedColumns(): void {\n    if (this.columns) {\n      for (const column of this.columns) {\n        this.displayedColumns.push(column.name);\n      }\n      this.displayedColumns.push('edit', 'save', 'delete', 'cancel');\n    }\n  }\n\n  private renderStatusLabel(): void {\n    if (this.showStatusLabel) {\n      if (!this.displayedColumns.includes('statusLabelColumn')) {\n        this.displayedColumns.push('statusLabelColumn');\n      }\n      this.dataSource.data.forEach(element => element.statusLabelColumn = element.statusLabel.labelValue);\n    }\n  }\n\n  private renderSorting(): void {\n    if (this.enableSort) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  private renderPagination(): void {\n    if (this.enablePagination) {\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n}\n","<div *ngIf=\"enableFiltering\" class=\"form\">\n  <label class=\"inp\" for=\"inp\">\n    <input (keyup)=\"applyFilter($event)\" id=\"inp\" placeholder=\" \" type=\"text\">\n    <span class=\"label\">Suchen & Filtern</span>\n    <span class=\"focus-bg\"></span>\n  </label>\n</div>\n<div class=\"table-container\">\n  <table #table [dataSource]=\"dataSource\" class=\"inventar-table mat-elevation-z8\" mat-table matSort>\n    <div *ngIf=\"enableSort\">\n      <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{column.displayName}} </th>\n        <td *matCellDef=\"let element; index as i\" class=\"table-column\" mat-cell>\n          <input (keyup)=\"changeInputValue(column.backendName, i, column.backendPath)\"\n                 *ngIf=\"!!column.backendPath && column.editable\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendPath.toString()][column.backendName]\"\n                 name={{column.name}}>\n          <input (keyup)=\"changeInputValue(column.backendName, i)\"\n                 *ngIf=\"column.backendPath === undefined && column.editable\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendName]\"\n                 name={{column.name}}>\n          <span\n            *ngIf=\"!column.editable && !!column.backendPath\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n          <span *ngIf=\"!column.editable && column.backendPath === undefined\">{{element[column.backendName]}}</span>\n        </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n        <th *matHeaderCellDef mat-header-cell mat-sort-header>{{statusHeaderLabel}}</th>\n        <td *matCellDef=\"let element; index as i\" mat-cell>\n          <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n        </td>\n      </ng-container>\n    </div>\n\n    <div *ngIf=\"!enableSort\">\n      <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n        <th *matHeaderCellDef mat-header-cell> {{column.displayName}} </th>\n        <td *matCellDef=\"let element; index as i\" class=\"table-column\" mat-cell>\n          <input (keyup)=\"changeInputValue(column.backendName, i, column.backendPath)\"\n                 *ngIf=\"!!column.backendPath\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendPath.toString()][column.backendName]\"\n                 name={{column.name}}>\n          <input (keyup)=\"changeInputValue(column.backendName, i)\" *ngIf=\"column.backendPath === undefined\"\n                 [disabled]=\"!editMode || (i + correctIndex) !== editModeIndex\"\n                 [id]=\"column.backendName + i\"\n                 [pattern]=\"!!!column.inputValidationPattern ? column.inputValidationPattern : ''\"\n                 [style]=\"column.styleInput\"\n                 [value]=\"element[column.backendName]\"\n                 name={{column.name}}>\n          <span\n            *ngIf=\"!column.editable && !!column.backendPath\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n          <span *ngIf=\"!column.editable && column.backendPath === undefined\">{{element[column.backendName]}}</span>\n        </td>\n      </ng-container>\n\n      <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n        <th *matHeaderCellDef mat-header-cell>{{statusHeaderLabel}}</th>\n        <td *matCellDef=\"let element; index as i\" mat-cell>\n          <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n        </td>\n      </ng-container>\n    </div>\n\n    <ng-container matColumnDef=\"edit\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-pen\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell><a (click)=\"enableEditMode(i)\"\n                                                            *ngIf=\"!editMode\"\n                                                            class=\"btn-icon-button table-row-action edit-action\">\n        <i class=\"fa fa-pen\"></i>\n      </a></td>\n    </ng-container>\n    <ng-container matColumnDef=\"cancel\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-window-close\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button\n          (click)=\"cancel()\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n          class=\"btn-icon-button btn-cancel\"><i class=\"fa fa-window-close\"></i></button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"save\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-save\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button (click)=\"emitSaveEntry()\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n                [disabled]=\"change === 0\"\n                class=\"btn-icon-button\" id=\"saveBtn\" type=\"submit\"><i\n          [ngClass]=\"change === 0 ? 'inventory-button-disabled' : ''\" class=\"fa fa-save\"></i></button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"delete\">\n      <th *matHeaderCellDef mat-header-cell><i class=\"header-icons fa fa-trash\"></i></th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <button\n          (click)=\"deleteEntry(i)\" *ngIf=\"editMode && editModeIndex === i + pageIndex * pageSize\"\n          class=\"btn-icon-button btn-cancel\"><i class=\"fa fa-trash\"></i></button>\n      </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n    <tr *matRowDef=\"let element; columns: displayedColumns;\" mat-row></tr>\n  </table>\n  <mat-paginator (page)=\"onChangePagination($event)\" *ngIf=\"enablePagination\" [pageSizeOptions]=\"[10, 25, 50, 100, 200]\"\n                 showFirstLastButtons></mat-paginator>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikTableEditmodeComponent } from './uik-table-editmode.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { UikStatusLabelModule } from \"../uik-status-label/uik-status-label.module\";\n\n\n@NgModule({\n  declarations: [\n    UikTableEditmodeComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    UikStatusLabelModule\n  ],\n  exports: [\n    UikTableEditmodeComponent\n  ]\n})\nexport class UikTableEditmodeModule {}\n","import {\n  AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { IActionColumnClicked, IActionColumns, IColumns } from './interfaces/uik-table.interface';\n\n@Component({\n  selector: 'engo-uik-table',\n  templateUrl: './uik-table.component.html',\n  styleUrls: ['./uik-table.component.css']\n})\nexport class UikTableComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() columns: IColumns[] | undefined = undefined;\n  @Input() actionColumns?: IActionColumns [] | undefined = undefined;\n  @Input() statusHeaderLabel?: string;\n  @Input() showStatusLabel = false;\n  @Input() dataSource: MatTableDataSource<any> = new MatTableDataSource();\n  @Input() enablePagination = false;\n  @Input() paginatorPageOptions?: Array<number>;\n  @Input() enableSort = false;\n  @Input() enableFiltering = false;\n\n  @Output() actionButtonClicked: EventEmitter<IActionColumnClicked> = new EventEmitter<IActionColumnClicked>();\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator | null;\n\n  @ViewChild(MatSort) sort!: MatSort;\n\n  @ViewChild(MatTable)\n  table!: MatTable<any>;\n\n  displayedColumns: string[] = [];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.renderDisplayedColumns();\n    this.renderActionColumns();\n  }\n\n  ngAfterViewInit(): void {\n    this.renderSorting();\n    this.renderPagination();\n    this.renderStatusLabel();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.table) {\n      if (changes[\"dataSource\"]) {\n        this.table.dataSource = this.dataSource;\n      }\n      this.table.renderRows();\n      this.renderSorting();\n      this.renderPagination();\n      this.renderStatusLabel();\n    }\n  }\n\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  public emitActionButtonClicked(buttonName: string, index: string): void {\n    // TODO: index korrigieren wie auch in checkbox Table [ITD-\n    if (this.paginator && this.enablePagination === true) {\n      const pageIndex = this.paginator.pageIndex;\n      const pageSize = this.paginator.pageSize;\n      const correctIndex = pageIndex * pageSize;\n      index = index + correctIndex;\n    }\n    const elementId = this.dataSource.filteredData[+index].id;\n    if (this.enableFiltering && !!this.dataSource.filter) {\n      const indexOfFiltered = this.dataSource.data.findIndex((e) => e.id === elementId);\n      if (indexOfFiltered) {\n        index = indexOfFiltered.toString();\n      }\n    }\n    const emit: IActionColumnClicked = {\n      buttonName,\n      index\n    };\n    this.actionButtonClicked.emit(emit);\n  }\n\n  private renderDisplayedColumns(): void {\n    if (this.columns) {\n      for (const column of this.columns) {\n        this.displayedColumns.push(column.name);\n      }\n    }\n  }\n\n  private renderStatusLabel(): void {\n    if (this.showStatusLabel) {\n      if (!this.displayedColumns.includes('statusLabelColumn')) {\n        this.displayedColumns.push('statusLabelColumn');\n      }\n      this.dataSource.data.forEach(element => element.statusLabelColumn = element.statusLabel.labelValue);\n    }\n  }\n\n  private renderActionColumns(): void {\n    if (this.actionColumns) {\n      for (const actionColumn of this.actionColumns) {\n        this.displayedColumns.push(actionColumn.name);\n      }\n    }\n  }\n\n  private renderSorting(): void {\n    if (this.enableSort) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n\n  private renderPagination(): void {\n    if (this.enablePagination) {\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n}\n","<div *ngIf=\"enableFiltering === true\" class=\"form\">\n  <label class=\"inp\" for=\"inp\">\n    <input (keyup)=\"applyFilter($event)\" id=\"inp-search-filter\" placeholder=\" \" type=\"text\">\n    <span class=\"label\">Suchen & Filtern</span>\n    <span class=\"focus-bg\"></span>\n  </label>\n</div>\n<table #table [dataSource]=\"dataSource\" class=\"inventar-table mat-elevation-z8\" mat-table matSort>\n\n  <div *ngIf=\"enableSort\">\n    <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n      <th *matHeaderCellDef mat-header-cell mat-sort-header> {{column.displayName}} </th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <span *ngIf=\"!!column.backendPath\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n        <span *ngIf=\"column.backendPath === undefined\">{{element[column.backendName]}}</span>\n      </td>\n    </ng-container>\n    <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n      <th *matHeaderCellDef mat-header-cell mat-sort-header>{{statusHeaderLabel}}</th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n      </td>\n    </ng-container>\n\n  </div>\n\n  <div *ngIf=\"!enableSort\">\n    <ng-container *ngFor=\"let column of columns\" matColumnDef={{column.name}}>\n      <th *matHeaderCellDef mat-header-cell> {{column.displayName}} </th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <span *ngIf=\"!!column.backendPath\"\n              [style]=\"column.style\">{{element[column.backendPath.toString()][column.backendName]}}</span>\n        <span *ngIf=\"column.backendPath === undefined\" [style]=\"column.style\">{{element[column.backendName]}}</span>\n      </td>\n    </ng-container>\n    <ng-container *ngIf=\"showStatusLabel\" matColumnDef=\"statusLabelColumn\">\n      <th *matHeaderCellDef mat-header-cell mat-sort-header>{{statusHeaderLabel}}</th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <engo-uik-status-label [labelData]=\"element.statusLabel\"></engo-uik-status-label>\n      </td>\n    </ng-container>\n\n  </div>\n\n  <div *ngIf=\"actionColumns\">\n    <ng-container *ngFor=\"let column of actionColumns\" matColumnDef={{column.name}}>\n      <th *matHeaderCellDef mat-header-cell> {{column.displayName}} </th>\n      <td *matCellDef=\"let element; index as i\" mat-cell>\n        <a (click)=\"emitActionButtonClicked(column.name, i)\" class=\"btn-icon-button action-button\">\n          <i (click)=\"emitActionButtonClicked(column.name, i)\" [id]=\"'callAction'\" [ngClass]=\"column.faIconName\"></i>\n        </a>\n      </td>\n    </ng-container>\n  </div>\n\n  <tr *matHeaderRowDef=\"displayedColumns; sticky: true\" mat-header-row></tr>\n  <tr *matRowDef=\"let element; columns: displayedColumns;\" mat-row></tr>\n</table>\n<mat-paginator *ngIf=\"enablePagination\"\n               [pageSizeOptions]=\"paginatorPageOptions && paginatorPageOptions.length > 0 ? paginatorPageOptions : [10, 25, 50, 100, 200]\"\n               showFirstLastButtons></mat-paginator>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikTableComponent } from './uik-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { UikStatusLabelModule } from '../uik-status-label/uik-status-label.module';\n\n\n@NgModule({\n  declarations: [UikTableComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    UikStatusLabelModule\n  ],\n  exports: [\n    UikTableComponent\n  ]\n})\nexport class UikTableModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'engo-uik-confirmation-dialog',\n  templateUrl: './uik-confirmation-dialog.component.html',\n  styleUrls: ['./uik-confirmation-dialog.component.css']\n})\nexport class UikConfirmationDialogComponent implements OnInit {\n  message = 'Are you sure?';\n  confirmButtonText = 'Yes';\n  cancelButtonText = 'Cancel';\n  confirmFaIconClass = 'fa fa-trash';\n  cancelFaIconClass = 'fa fa-ban';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data: any,\n    private dialogRef: MatDialogRef<UikConfirmationDialogComponent>) {\n    if (data) {\n      this.message = data.message || this.message;\n      if (data.buttonText) {\n        this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\n        this.cancelButtonText = data.buttonText.cancel || this.cancelButtonText;\n      }\n      if (data.buttonIcons) {\n        this.confirmFaIconClass = data.buttonIcons.ok || this.confirmFaIconClass;\n        this.cancelFaIconClass = data.buttonIcons.cancel || this.cancelFaIconClass;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  onConfirmClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<mat-dialog-content class=\"confirmation-dialog-content\">\n  <p>\n    {{message}}\n  </p>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"btn-action-button btn-gray\" mat-dialog-close><i\n    [class]=\"cancelFaIconClass + ' btn-icon'\"></i>{{cancelButtonText}}</button>\n\n  <button (click)=\"onConfirmClick()\" class=\"btn-action-button\"><i\n    [class]=\"confirmFaIconClass + ' btn-icon'\"></i>{{confirmButtonText}}</button>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UikConfirmationDialogComponent } from './uik-confirmation-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n@NgModule({\n  declarations: [\n    UikConfirmationDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n  ],\n  exports: [\n    UikConfirmationDialogComponent\n  ]\n})\nexport class UikConfirmationDialogModule {}\n","/*\n * Public API Surface of cps-ui-kit-lib\n */\n\n/*\n Uik Form Loading\n */\nexport * from \"./lib/uik-form-loading/uik-form-loading.module\";\nexport * from \"./lib/uik-form-loading/uik-form-loading.component\";\n\n/*\n + Uik Table More Actions\n */\nexport * from \"./lib/uik-table-more-actions/uik-table-more-actions.module\";\nexport * from \"./lib/uik-table-more-actions/uik-table-more-actions.component\";\nexport * from \"./lib/uik-table-more-actions/interfaces/TableMoreActions.interface\";\n\n/*\n * Uik Table Loading\n */\nexport * from \"./lib/uik-table-loading/uik-table-loading.module\";\nexport * from \"./lib/uik-table-loading/uik-table-loading.component\";\n\n/*\n + Uik Table Filter Menu\n */\nexport * from './lib/uik-table-filter-menu/uik-table-filter-menu.module';\nexport * from './lib/uik-table-filter-menu/uik-table-filter-menu.component';\nexport * from './lib/uik-table-filter-menu/interfaces/TableFilterMenuItem.interface';\n\n/*\n * Uik Table Filter by list menu\n */\nexport * from './lib/uik-table-filter-by-list-menu/uik-table-filter-by-list-menu.module';\nexport * from './lib/uik-table-filter-by-list-menu/uik-table-filter-by-list-menu.component';\n\n/*\n *Uik Routing Loading Bar\n */\nexport * from './lib/uik-routing-loading-bar/uik-routing-loading-bar.module'\nexport * from './lib/uik-routing-loading-bar/uik-routing-loading-bar.component'\n/*\n * Uik Status Label\n */\n\nexport * from './lib/uik-status-label/uik-status-label.module';\nexport * from './lib/uik-status-label/uik-status-label.component';\nexport * from './lib/uik-status-label/interfaces/uik-status-label.interface';\n\n/*\n * Uik Form Legend\n */\n\nexport * from './lib/uik-forms/uik-form-legend/uik-form-legend.module';\nexport * from './lib/uik-forms/uik-form-legend/uik-form-legend.component';\n\n\n/*\n * Uik Forms\n */\nexport * from './lib/uik-forms/uik-forms/uik-forms.module';\nexport * from './lib/uik-forms/uik-forms/uik-forms.component';\nexport * from './lib/uik-forms/interfaces/uik-forms.interface';\n\n/*\n * Uik Checkbox Table\n */\nexport * from './lib/uik-table-checkbox/uik-table-checkbox.component';\nexport * from './lib/uik-table-checkbox/uik-table-checkbox.module';\nexport * from './lib/uik-table-checkbox/interfaces/uik-table-checkbox.interface';\n/*\n * Uik Edit Mode Table\n */\nexport * from './lib/uik-table-editmode/uik-table-editmode.component';\nexport * from './lib/uik-table-editmode/uik-table-editmode.module';\nexport * from './lib/uik-table-editmode/interfaces/uikEditTable.interface';\n\n/*\n * Uik Table\n */\n\nexport * from './lib/uik-table/uik-table.module';\nexport * from './lib/uik-table/uik-table.component';\nexport * from './lib/uik-table/interfaces/uik-table.interface';\n\n/*\n * Uik Confirmation Dialog\n */\n\nexport * from './lib/uik-confirmation-dialog/uik-confirmation-dialog.module';\nexport * from './lib/uik-confirmation-dialog/uik-confirmation-dialog.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i4","_cloneDeep","i6","i3","i5","i6.UikStatusLabelComponent","i5.UikStatusLabelComponent"],"mappings":"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"}