import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
export class UikConfirmationDialogComponent {
    constructor(data, dialogRef) {
        this.dialogRef = dialogRef;
        this.message = 'Are you sure?';
        this.confirmButtonText = 'Yes';
        this.cancelButtonText = 'Cancel';
        this.confirmFaIconClass = 'fa fa-trash';
        this.cancelFaIconClass = 'fa fa-ban';
        if (data) {
            this.message = data.message || this.message;
            if (data.buttonText) {
                this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;
                this.cancelButtonText = data.buttonText.cancel || this.cancelButtonText;
            }
            if (data.buttonIcons) {
                this.confirmFaIconClass = data.buttonIcons.ok || this.confirmFaIconClass;
                this.cancelFaIconClass = data.buttonIcons.cancel || this.cancelFaIconClass;
            }
        }
    }
    ngOnInit() {
    }
    onConfirmClick() {
        this.dialogRef.close(true);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikConfirmationDialogComponent, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: UikConfirmationDialogComponent, selector: "engo-uik-confirmation-dialog", ngImport: i0, template: "<mat-dialog-content class=\"confirmation-dialog-content\">\n  <p>\n    {{message}}\n  </p>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"btn-action-button btn-gray\" mat-dialog-close><i\n    [class]=\"cancelFaIconClass + ' btn-icon'\"></i>{{cancelButtonText}}</button>\n\n  <button (click)=\"onConfirmClick()\" class=\"btn-action-button\"><i\n    [class]=\"confirmFaIconClass + ' btn-icon'\"></i>{{confirmButtonText}}</button>\n</mat-dialog-actions>\n", styles: [".mat-mdc-dialog-actions{display:flex;justify-content:right;margin:12px;flex-wrap:wrap}.btn-action-button{margin-right:12px}.confirmation-dialog-content{max-width:1000px}\n"], dependencies: [{ kind: "directive", type: i1.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: UikConfirmationDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'engo-uik-confirmation-dialog', template: "<mat-dialog-content class=\"confirmation-dialog-content\">\n  <p>\n    {{message}}\n  </p>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"btn-action-button btn-gray\" mat-dialog-close><i\n    [class]=\"cancelFaIconClass + ' btn-icon'\"></i>{{cancelButtonText}}</button>\n\n  <button (click)=\"onConfirmClick()\" class=\"btn-action-button\"><i\n    [class]=\"confirmFaIconClass + ' btn-icon'\"></i>{{confirmButtonText}}</button>\n</mat-dialog-actions>\n", styles: [".mat-mdc-dialog-actions{display:flex;justify-content:right;margin:12px;flex-wrap:wrap}.btn-action-button{margin-right:12px}.confirmation-dialog-content{max-width:1000px}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWlrLWNvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZW5nby11aS1raXQtbGliL3NyYy9saWIvdWlrLWNvbmZpcm1hdGlvbi1kaWFsb2cvdWlrLWNvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZW5nby11aS1raXQtbGliL3NyYy9saWIvdWlrLWNvbmZpcm1hdGlvbi1kaWFsb2cvdWlrLWNvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBZ0IsTUFBTSwwQkFBMEIsQ0FBQzs7O0FBT3pFLE1BQU0sT0FBTyw4QkFBOEI7SUFPekMsWUFDMkIsSUFBUyxFQUMxQixTQUF1RDtRQUF2RCxjQUFTLEdBQVQsU0FBUyxDQUE4QztRQVJqRSxZQUFPLEdBQUcsZUFBZSxDQUFDO1FBQzFCLHNCQUFpQixHQUFHLEtBQUssQ0FBQztRQUMxQixxQkFBZ0IsR0FBRyxRQUFRLENBQUM7UUFDNUIsdUJBQWtCLEdBQUcsYUFBYSxDQUFDO1FBQ25DLHNCQUFpQixHQUFHLFdBQVcsQ0FBQztRQUs5QixJQUFJLElBQUksRUFBRTtZQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQzVDLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztnQkFDdEUsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQzthQUN6RTtZQUNELElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDcEIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztnQkFDekUsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQzthQUM1RTtTQUNGO0lBQ0gsQ0FBQztJQUVELFFBQVE7SUFDUixDQUFDO0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7K0dBNUJVLDhCQUE4QixrQkFRL0IsZUFBZTttR0FSZCw4QkFBOEIsb0VDUjNDLHVkQVlBOzs0RkRKYSw4QkFBOEI7a0JBTDFDLFNBQVM7K0JBQ0UsOEJBQThCOzswQkFZckMsTUFBTTsyQkFBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTUFUX0RJQUxPR19EQVRBLCBNYXREaWFsb2dSZWYgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlbmdvLXVpay1jb25maXJtYXRpb24tZGlhbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Vpay1jb25maXJtYXRpb24tZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdWlrLWNvbmZpcm1hdGlvbi1kaWFsb2cuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFVpa0NvbmZpcm1hdGlvbkRpYWxvZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIG1lc3NhZ2UgPSAnQXJlIHlvdSBzdXJlPyc7XG4gIGNvbmZpcm1CdXR0b25UZXh0ID0gJ1llcyc7XG4gIGNhbmNlbEJ1dHRvblRleHQgPSAnQ2FuY2VsJztcbiAgY29uZmlybUZhSWNvbkNsYXNzID0gJ2ZhIGZhLXRyYXNoJztcbiAgY2FuY2VsRmFJY29uQ2xhc3MgPSAnZmEgZmEtYmFuJztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgZGF0YTogYW55LFxuICAgIHByaXZhdGUgZGlhbG9nUmVmOiBNYXREaWFsb2dSZWY8VWlrQ29uZmlybWF0aW9uRGlhbG9nQ29tcG9uZW50Pikge1xuICAgIGlmIChkYXRhKSB7XG4gICAgICB0aGlzLm1lc3NhZ2UgPSBkYXRhLm1lc3NhZ2UgfHwgdGhpcy5tZXNzYWdlO1xuICAgICAgaWYgKGRhdGEuYnV0dG9uVGV4dCkge1xuICAgICAgICB0aGlzLmNvbmZpcm1CdXR0b25UZXh0ID0gZGF0YS5idXR0b25UZXh0Lm9rIHx8IHRoaXMuY29uZmlybUJ1dHRvblRleHQ7XG4gICAgICAgIHRoaXMuY2FuY2VsQnV0dG9uVGV4dCA9IGRhdGEuYnV0dG9uVGV4dC5jYW5jZWwgfHwgdGhpcy5jYW5jZWxCdXR0b25UZXh0O1xuICAgICAgfVxuICAgICAgaWYgKGRhdGEuYnV0dG9uSWNvbnMpIHtcbiAgICAgICAgdGhpcy5jb25maXJtRmFJY29uQ2xhc3MgPSBkYXRhLmJ1dHRvbkljb25zLm9rIHx8IHRoaXMuY29uZmlybUZhSWNvbkNsYXNzO1xuICAgICAgICB0aGlzLmNhbmNlbEZhSWNvbkNsYXNzID0gZGF0YS5idXR0b25JY29ucy5jYW5jZWwgfHwgdGhpcy5jYW5jZWxGYUljb25DbGFzcztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG4gIG9uQ29uZmlybUNsaWNrKCk6IHZvaWQge1xuICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKHRydWUpO1xuICB9XG59XG4iLCI8bWF0LWRpYWxvZy1jb250ZW50IGNsYXNzPVwiY29uZmlybWF0aW9uLWRpYWxvZy1jb250ZW50XCI+XG4gIDxwPlxuICAgIHt7bWVzc2FnZX19XG4gIDwvcD5cbjwvbWF0LWRpYWxvZy1jb250ZW50PlxuPG1hdC1kaWFsb2ctYWN0aW9ucz5cbiAgPGJ1dHRvbiBjbGFzcz1cImJ0bi1hY3Rpb24tYnV0dG9uIGJ0bi1ncmF5XCIgbWF0LWRpYWxvZy1jbG9zZT48aVxuICAgIFtjbGFzc109XCJjYW5jZWxGYUljb25DbGFzcyArICcgYnRuLWljb24nXCI+PC9pPnt7Y2FuY2VsQnV0dG9uVGV4dH19PC9idXR0b24+XG5cbiAgPGJ1dHRvbiAoY2xpY2spPVwib25Db25maXJtQ2xpY2soKVwiIGNsYXNzPVwiYnRuLWFjdGlvbi1idXR0b25cIj48aVxuICAgIFtjbGFzc109XCJjb25maXJtRmFJY29uQ2xhc3MgKyAnIGJ0bi1pY29uJ1wiPjwvaT57e2NvbmZpcm1CdXR0b25UZXh0fX08L2J1dHRvbj5cbjwvbWF0LWRpYWxvZy1hY3Rpb25zPlxuIl19